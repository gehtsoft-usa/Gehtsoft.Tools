<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="Gehtsoft.ExpressionToJs">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.ExpressionToJs</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Debug</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.ExpressionToJs</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.ExpressionToJs</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Gehtsoft.ExpressionToJs">
      <apidata name="Gehtsoft.ExpressionToJs" group="namespace" />
      <elements>
        <element api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" />
        <element api="T:Gehtsoft.ExpressionToJs.Functions" />
        <element api="T:Gehtsoft.ExpressionToJs.ExpressionToJsStubAccessor" />
      </elements>
    </api>
    <api id="T:Gehtsoft.ExpressionToJs.ExpressionCompiler">
      <apidata name="ExpressionCompiler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.#ctor(System.Linq.Expressions.LambdaExpression)" />
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.WalkExpression(System.Linq.Expressions.Expression)" />
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddArrayLength(System.Linq.Expressions.UnaryExpression)" />
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddConditional(System.Linq.Expressions.ConditionalExpression)" />
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddBinary(System.String,System.Linq.Expressions.BinaryExpression)" />
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddUnary(System.String,System.Linq.Expressions.UnaryExpression)" />
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddConstant(System.Object)" />
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddConstant(System.Linq.Expressions.ConstantExpression)" />
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddMemberAccess(System.Linq.Expressions.MemberExpression)" />
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.GetExpressionValue(System.Linq.Expressions.Expression,System.Object@)" />
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.IsExpressionRootsInParameter(System.Linq.Expressions.Expression)" />
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddParameterAccess(System.Linq.Expressions.Expression)" />
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddArrayIndex(System.Linq.Expressions.BinaryExpression)" />
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddLambdaParameter(System.Linq.Expressions.LambdaExpression)" />
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddCall(System.Linq.Expressions.MethodCallExpression)" />
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddConvert(System.Linq.Expressions.UnaryExpression)" />
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddParameter(System.Linq.Expressions.ParameterExpression)" />
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.Equals(Gehtsoft.ExpressionToJs.ExpressionCompiler)" />
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.Equals(System.Linq.Expressions.Expression)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="P:Gehtsoft.ExpressionToJs.ExpressionCompiler.ReturnType" />
        <element api="P:Gehtsoft.ExpressionToJs.ExpressionCompiler.JavaScriptExpression" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.#ctor(System.Linq.Expressions.LambdaExpression)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lambdaExpression">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddArrayIndex(System.Linq.Expressions.BinaryExpression)">
      <apidata name="AddArrayIndex" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddArrayLength(System.Linq.Expressions.UnaryExpression)">
      <apidata name="AddArrayLength" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddBinary(System.String,System.Linq.Expressions.BinaryExpression)">
      <apidata name="AddBinary" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="function">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddCall(System.Linq.Expressions.MethodCallExpression)">
      <apidata name="AddCall" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddConditional(System.Linq.Expressions.ConditionalExpression)">
      <apidata name="AddConditional" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.ConditionalExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddConstant(System.Linq.Expressions.ConstantExpression)">
      <apidata name="AddConstant" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.ConstantExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddConstant(System.Object)">
      <apidata name="AddConstant" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constantValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddConvert(System.Linq.Expressions.UnaryExpression)">
      <apidata name="AddConvert" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddLambdaParameter(System.Linq.Expressions.LambdaExpression)">
      <apidata name="AddLambdaParameter" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddMemberAccess(System.Linq.Expressions.MemberExpression)">
      <apidata name="AddMemberAccess" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddParameter(System.Linq.Expressions.ParameterExpression)">
      <apidata name="AddParameter" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="parameterExpression">
          <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddParameterAccess(System.Linq.Expressions.Expression)">
      <apidata name="AddParameterAccess" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.AddUnary(System.String,System.Linq.Expressions.UnaryExpression)">
      <apidata name="AddUnary" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="function">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.Equals(Gehtsoft.ExpressionToJs.ExpressionCompiler)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.Equals(System.Linq.Expressions.Expression)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.GetExpressionValue(System.Linq.Expressions.Expression,System.Object@)">
      <apidata name="GetExpressionValue" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="returnValue" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.IsExpressionRootsInParameter(System.Linq.Expressions.Expression)">
      <apidata name="IsExpressionRootsInParameter" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.ExpressionToJs.ExpressionCompiler.JavaScriptExpression">
      <apidata name="JavaScriptExpression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_JavaScriptExpression" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.ExpressionToJs.ExpressionCompiler.ReturnType">
      <apidata name="ReturnType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ReturnType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.ExpressionCompiler.WalkExpression(System.Linq.Expressions.Expression)">
      <apidata name="WalkExpression" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionCompiler" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.ExpressionToJs.ExpressionToJsStubAccessor">
      <apidata name="ExpressionToJsStubAccessor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionToJsStubAccessor.GetJsIncludesAsString" />
        <element api="M:Gehtsoft.ExpressionToJs.ExpressionToJsStubAccessor.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.ExpressionToJsStubAccessor.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionToJsStubAccessor" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.ExpressionToJsStubAccessor.GetJsIncludesAsString">
      <apidata name="GetJsIncludesAsString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.ExpressionToJsStubAccessor" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.ExpressionToJs.Functions">
      <apidata name="Functions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.ExpressionToJs.Functions.DaysSince(System.DateTime,System.DateTime)" />
        <element api="M:Gehtsoft.ExpressionToJs.Functions.MonthsSince(System.DateTime,System.DateTime)" />
        <element api="M:Gehtsoft.ExpressionToJs.Functions.YearsSince(System.DateTime,System.DateTime)" />
        <element api="M:Gehtsoft.ExpressionToJs.Functions.IsCreditCardNumberCorrect(System.String)" />
        <element api="M:Gehtsoft.ExpressionToJs.Functions.ToBool(System.Object)" />
        <element api="M:Gehtsoft.ExpressionToJs.Functions.ToInt(System.Object)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.Functions.DaysSince(System.DateTime,System.DateTime)">
      <apidata name="DaysSince" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="args0">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="args1">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.Functions" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.Functions.IsCreditCardNumberCorrect(System.String)">
      <apidata name="IsCreditCardNumberCorrect" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.Functions" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.Functions.MonthsSince(System.DateTime,System.DateTime)">
      <apidata name="MonthsSince" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="args0">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="args1">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.Functions" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.Functions.ToBool(System.Object)">
      <apidata name="ToBool" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="v">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.Functions" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.Functions.ToInt(System.Object)">
      <apidata name="ToInt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="v">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.Functions" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.ExpressionToJs.Functions.YearsSince(System.DateTime,System.DateTime)">
      <apidata name="YearsSince" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="args0">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="args1">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.ExpressionToJs" module="Gehtsoft.ExpressionToJs" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.ExpressionToJs" />
        <type api="T:Gehtsoft.ExpressionToJs.Functions" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>
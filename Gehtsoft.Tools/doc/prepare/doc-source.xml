<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="Gehtsoft.Tools.Crypto">
      <assemblydata version="1.0.0.0" culture="" key="00240000048000009400000006020000002400005253413100040000010001004F3B28DE3287985C21938FDEC6E0B2C4C2A83542DF6E8A7953D1A0EBE83F674784AD3090843E1A0C6DBE8383E243FD9413ABC84B82B4A57F3144836E7136E03110AD9ABEF9B93B2E73D7DD6C892EEF42F6DD2D37EDDB0CED8C89A48A6AA4E0E2E365A5A38DBA5EEF30BC66C3F653A94BEF9E3899E019B7015F487ECD9AD893BC" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.Crypto</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Release</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.Crypto</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.Crypto</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="Gehtsoft.Tools.FileUtils">
      <assemblydata version="1.0.0.0" culture="" key="00240000048000009400000006020000002400005253413100040000010001004F3B28DE3287985C21938FDEC6E0B2C4C2A83542DF6E8A7953D1A0EBE83F674784AD3090843E1A0C6DBE8383E243FD9413ABC84B82B4A57F3144836E7136E03110AD9ABEF9B93B2E73D7DD6C892EEF42F6DD2D37EDDB0CED8C89A48A6AA4E0E2E365A5A38DBA5EEF30BC66C3F653A94BEF9E3899E019B7015F487ECD9AD893BC" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.FileUtils</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Release</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.FileUtils</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.FileUtils</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="Gehtsoft.Tools.Log">
      <assemblydata version="1.0.0.0" culture="" key="00240000048000009400000006020000002400005253413100040000010001004F3B28DE3287985C21938FDEC6E0B2C4C2A83542DF6E8A7953D1A0EBE83F674784AD3090843E1A0C6DBE8383E243FD9413ABC84B82B4A57F3144836E7136E03110AD9ABEF9B93B2E73D7DD6C892EEF42F6DD2D37EDDB0CED8C89A48A6AA4E0E2E365A5A38DBA5EEF30BC66C3F653A94BEF9E3899E019B7015F487ECD9AD893BC" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.Log</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Release</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.Log</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.Log</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="Gehtsoft.Tools.ObjectPool">
      <assemblydata version="1.0.0.0" culture="" key="00240000048000009400000006020000002400005253413100040000010001004F3B28DE3287985C21938FDEC6E0B2C4C2A83542DF6E8A7953D1A0EBE83F674784AD3090843E1A0C6DBE8383E243FD9413ABC84B82B4A57F3144836E7136E03110AD9ABEF9B93B2E73D7DD6C892EEF42F6DD2D37EDDB0CED8C89A48A6AA4E0E2E365A5A38DBA5EEF30BC66C3F653A94BEF9E3899E019B7015F487ECD9AD893BC" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.ObjectPool</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Release</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.ObjectPool</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.ObjectPool</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="Gehtsoft.Tools.Profile">
      <assemblydata version="1.0.0.0" culture="" key="00240000048000009400000006020000002400005253413100040000010001004F3B28DE3287985C21938FDEC6E0B2C4C2A83542DF6E8A7953D1A0EBE83F674784AD3090843E1A0C6DBE8383E243FD9413ABC84B82B4A57F3144836E7136E03110AD9ABEF9B93B2E73D7DD6C892EEF42F6DD2D37EDDB0CED8C89A48A6AA4E0E2E365A5A38DBA5EEF30BC66C3F653A94BEF9E3899E019B7015F487ECD9AD893BC" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.Profile</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Release</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.Profile</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.Profile</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="Gehtsoft.Tools.Log.RollingFile">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.Log.RollingFile</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Release</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.Log.RollingFile</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.Log.RollingFile</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="Gehtsoft.Tools.Log.Serilog">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.Log.Serilog</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Release</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.Log.Serilog</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.Log.Serilog</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="Gehtsoft.Tools.Structures">
      <assemblydata version="1.0.0.0" culture="" key="00240000048000009400000006020000002400005253413100040000010001004F3B28DE3287985C21938FDEC6E0B2C4C2A83542DF6E8A7953D1A0EBE83F674784AD3090843E1A0C6DBE8383E243FD9413ABC84B82B4A57F3144836E7136E03110AD9ABEF9B93B2E73D7DD6C892EEF42F6DD2D37EDDB0CED8C89A48A6AA4E0E2E365A5A38DBA5EEF30BC66C3F653A94BEF9E3899E019B7015F487ECD9AD893BC" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.Structures</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Release</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.Structures</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.Structures</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="Gehtsoft.Tools.TypeUtils">
      <assemblydata version="1.0.0.0" culture="" key="00240000048000009400000006020000002400005253413100040000010001004F3B28DE3287985C21938FDEC6E0B2C4C2A83542DF6E8A7953D1A0EBE83F674784AD3090843E1A0C6DBE8383E243FD9413ABC84B82B4A57F3144836E7136E03110AD9ABEF9B93B2E73D7DD6C892EEF42F6DD2D37EDDB0CED8C89A48A6AA4E0E2E365A5A38DBA5EEF30BC66C3F653A94BEF9E3899E019B7015F487ECD9AD893BC" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.TypeUtils</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Release</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.TypeUtils</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.TypeUtils</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="Gehtsoft.Tools.IoC">
      <assemblydata version="1.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100E986C3FDC9DFFA5314E4E7B56BDC5AAD534C223F60E2908C38F5EC15AD48A30E435EBD9AB6B42F558C8AF1CE1213D18C0BB3D4E85A0AC1E30E5F4BD82CA4CA6671182E94889F761D5BD3AB6C55A7AC80B7E42DCA6F82AE3A661A8250833ABFC1A3620FC358941D8D06CB53B96EA54E4FA3312B9D982F6AAA34ABF2E630FC8EA0" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.IoC</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Release</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.IoC</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.IoC</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="Gehtsoft.Tools.CommandLine">
      <assemblydata version="1.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010095D39B422CA32DAD5E6D466C2C269802362694B8DEDC261B0348B2CF640690882DB177B96578EA514A1003EB2259BAF331662C806945D3EA65EF527A3FF1431F09E57F11E0528C60C8471533C5F73CC1E717C53EA7F3BDB5C5EAFD5B80985AC9BF4CD740C61AB462D7B1309AE70A6EC10FC770B73174160316F8CFCA29935FAB" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.CommandLine</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Release</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.CommandLine</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gehtsoft.Tools.CommandLine</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Gehtsoft.Tools.CommandLine">
      <apidata name="Gehtsoft.Tools.CommandLine" group="namespace" />
      <elements>
        <element api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" />
        <element api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType" />
        <element api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.OnKeyDelegate" />
        <element api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError" />
        <element api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.OnCommandLineErrorDelegate" />
        <element api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" />
        <element api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.OnKeyDelegate" />
        <element api="T:Gehtsoft.Tools.CommandLine.CommandLineParserCore" />
        <element api="T:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo" />
        <element api="T:Gehtsoft.Tools.CommandLine.SingleLineParser" />
        <element api="T:Gehtsoft.Tools.CommandLine.SingleLineParser.SignalId" />
        <element api="T:Gehtsoft.Tools.CommandLine.SingleLineParser.State" />
        <element api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" />
        <element api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument" />
        <element api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection" />
        <element api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error" />
        <element api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ErrorCollection" />
      </elements>
    </api>
    <api id="T:Gehtsoft.Tools.CommandLine.CommandLineParser">
      <apidata name="CommandLineParser" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParser.AddKey(Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription)" />
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParser.AddKey(Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType[])" />
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParser.AddKey(System.String,Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType[])" />
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParser.AddKey(System.String,System.Boolean,Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType[])" />
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParser.Parse(System.String[])" />
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParser.Parse(System.String)" />
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParser.#ctor" />
        <element api="E:Gehtsoft.Tools.CommandLine.CommandLineParser.OnCommandLineError" />
        <element api="E:Gehtsoft.Tools.CommandLine.CommandLineParser.OnKey" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.CommandLineParser.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.CommandLineParser.AddKey(Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription)">
      <apidata name="AddKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="description">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
            <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.CommandLineParser.AddKey(Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType[])">
      <apidata name="AddKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType" ref="false">
              <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
            </type>
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.CommandLineParser.AddKey(System.String,Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType[])">
      <apidata name="AddKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType" ref="false">
              <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
            </type>
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.CommandLineParser.AddKey(System.String,System.Boolean,Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType[])">
      <apidata name="AddKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="optional">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType" ref="false">
              <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
            </type>
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="E:Gehtsoft.Tools.CommandLine.CommandLineParser.OnCommandLineError">
      <apidata name="OnCommandLineError" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_OnCommandLineError" />
      <remover name="remove_OnCommandLineError" />
      <eventhandler>
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.OnCommandLineErrorDelegate" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </eventhandler>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="E:Gehtsoft.Tools.CommandLine.CommandLineParser.OnKey">
      <apidata name="OnKey" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_OnKey" />
      <remover name="remove_OnKey" />
      <eventhandler>
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.OnKeyDelegate" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </eventhandler>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.CommandLineParser.Parse(System.String)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="line">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.CommandLineParser.Parse(System.String[])">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError">
      <apidata name="CommandLineError" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError.CantParseValue" />
        <element api="F:Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError.WrongNumberOfValues" />
        <element api="F:Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError.UnknownKey" />
        <element api="F:Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError.KeyNotSet" />
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute``1(System.Enum)" source="extension">
          <apidata name="GetCustomAttribute" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T">
              <constrained>
                <type api="T:System.Attribute" ref="true" />
              </constrained>
            </template>
          </templates>
          <returns>
            <template name="T" index="0" api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute``1(System.Enum)" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.Description(System.Enum)" source="extension">
          <apidata name="Description" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute(System.Enum,System.Type)" source="extension">
          <apidata name="GetCustomAttribute" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributeType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Attribute" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError.CantParseValue">
      <apidata name="CantParseValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError.KeyNotSet">
      <apidata name="KeyNotSet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError.UnknownKey">
      <apidata name="UnknownKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError.WrongNumberOfValues">
      <apidata name="WrongNumberOfValues" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription">
      <apidata name="KeyDescription" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.GetParameterType(System.Int32)" />
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.IsParameterCountCorrect(System.Int32)" />
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.#ctor(System.String)" />
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.#ctor(System.String,System.Boolean)" />
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.#ctor(System.String,Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType[])" />
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.#ctor(System.String,System.Boolean,Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType[])" />
        <element api="P:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.KeyName" />
        <element api="P:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.Optional" />
        <element api="P:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.Parameters" />
        <element api="E:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.OnKey" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="keyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.#ctor(System.String,Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="keyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType" ref="false">
              <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
            </type>
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.#ctor(System.String,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="keyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="optional">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.#ctor(System.String,System.Boolean,Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="keyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="optional">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType" ref="false">
              <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
            </type>
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.GetParameterType(System.Int32)">
      <apidata name="GetParameterType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType" ref="false">
              <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.IsParameterCountCorrect(System.Int32)">
      <apidata name="IsParameterCountCorrect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.KeyName">
      <apidata name="KeyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeyName" />
      <setter name="set_KeyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="E:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.OnKey">
      <apidata name="OnKey" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_OnKey" />
      <remover name="remove_OnKey" />
      <eventhandler>
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.OnKeyDelegate" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
            <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
          </type>
        </type>
      </eventhandler>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.Optional">
      <apidata name="Optional" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Optional" />
      <setter name="set_Optional" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.Parameters">
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Parameters" />
      <setter name="set_Parameters" />
      <returns>
        <arrayOf rank="1">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType" ref="false">
            <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
          </type>
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription.OnKeyDelegate">
      <apidata name="OnKeyDelegate" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.CommandLine.CommandLineParser.OnCommandLineErrorDelegate">
      <apidata name="OnCommandLineErrorDelegate" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="error">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError" ref="false">
            <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
          </type>
        </parameter>
        <parameter name="key">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
            <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
          </type>
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.CommandLine.CommandLineParser.OnKeyDelegate">
      <apidata name="OnKeyDelegate" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="key">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
            <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
          </type>
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType">
      <apidata name="ParameterType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType.String" />
        <element api="F:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType.Integer" />
        <element api="F:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType.Number" />
        <element api="F:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType.Date" />
        <element api="F:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType.Boolean" />
        <element api="F:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType.Vararg" />
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute``1(System.Enum)" source="extension">
          <apidata name="GetCustomAttribute" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T">
              <constrained>
                <type api="T:System.Attribute" ref="true" />
              </constrained>
            </template>
          </templates>
          <returns>
            <template name="T" index="0" api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute``1(System.Enum)" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.Description(System.Enum)" source="extension">
          <apidata name="Description" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute(System.Enum,System.Type)" source="extension">
          <apidata name="GetCustomAttribute" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributeType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Attribute" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType.Boolean">
      <apidata name="Boolean" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType.Date">
      <apidata name="Date" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType.Integer">
      <apidata name="Integer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType.Number">
      <apidata name="Number" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType.String">
      <apidata name="String" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType.Vararg">
      <apidata name="Vararg" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.CommandLine.CommandLineParserCore">
      <apidata name="CommandLineParserCore" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParserCore.Process(Gehtsoft.Tools.CommandLine.CommandLineParser,System.String[])" />
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParserCore.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.CommandLineParserCore.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParserCore" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.CommandLineParserCore.Process(Gehtsoft.Tools.CommandLine.CommandLineParser,System.String[])">
      <apidata name="Process" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parser">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParserCore" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo">
      <apidata name="KeyInfo" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo.#ctor" />
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo.#ctor(Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription)" />
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo.Reset" />
        <element api="P:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo.HasParameters" />
        <element api="P:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo.Description" />
        <element api="P:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo.Occurrence" />
        <element api="P:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo.Values" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParserCore" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParserCore" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo.#ctor(Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="description">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
            <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParserCore" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo.Description">
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Description" />
      <setter name="set_Description" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParserCore" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo.HasParameters">
      <apidata name="HasParameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasParameters" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParserCore" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo.Occurrence">
      <apidata name="Occurrence" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Occurrence" />
      <setter name="set_Occurrence" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParserCore" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo.Reset">
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParserCore" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo.Values">
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParserCore.KeyInfo" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParserCore" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.CommandLine.SingleLineParser">
      <apidata name="SingleLineParser" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Tools.Structures.FastDFA`2" ref="true">
            <specialization>
              <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser.State" ref="false">
                <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser" ref="true" />
              </type>
              <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser.SignalId" ref="false">
                <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser" ref="true" />
              </type>
            </specialization>
          </type>
          <type api="T:Gehtsoft.Tools.Structures.FastDFA" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.CommandLine.SingleLineParser.#ctor" />
        <element api="M:Gehtsoft.Tools.CommandLine.SingleLineParser.Parse(System.String)" />
        <element api="P:Gehtsoft.Tools.CommandLine.SingleLineParser.SyncRoot" />
        <element api="M:Gehtsoft.Tools.Structures.FastDFA`2.AddTransition(`0,`0,`1,System.Action)" />
        <element api="M:Gehtsoft.Tools.Structures.FastDFA.AddTransition(System.Int32,System.Int32,System.Int32,System.Action)" />
        <element api="M:Gehtsoft.Tools.Structures.FastDFA`2.Signal(`1)" />
        <element api="M:Gehtsoft.Tools.Structures.FastDFA.Signal(System.Int32)" />
        <element api="P:Gehtsoft.Tools.Structures.FastDFA`2.CurrentState" />
        <element api="P:Gehtsoft.Tools.Structures.FastDFA`2.InitialState" />
        <element api="F:Gehtsoft.Tools.Structures.FastDFA.mMaxSignal" />
        <element api="F:Gehtsoft.Tools.Structures.FastDFA.mMaxState" />
        <element api="M:Gehtsoft.Tools.Structures.FastDFA.Initialize(System.Int32,System.Int32)" />
        <element api="M:Gehtsoft.Tools.Structures.FastDFA.Reset" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.SingleLineParser.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.SingleLineParser.Parse(System.String)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.CommandLine.SingleLineParser.SyncRoot">
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.CommandLine.SingleLineParser.SignalId">
      <apidata name="SignalId" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:Gehtsoft.Tools.CommandLine.SingleLineParser.SignalId.Space" />
        <element api="F:Gehtsoft.Tools.CommandLine.SingleLineParser.SignalId.Quote" />
        <element api="F:Gehtsoft.Tools.CommandLine.SingleLineParser.SignalId.Character" />
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute``1(System.Enum)" source="extension">
          <apidata name="GetCustomAttribute" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T">
              <constrained>
                <type api="T:System.Attribute" ref="true" />
              </constrained>
            </template>
          </templates>
          <returns>
            <template name="T" index="0" api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute``1(System.Enum)" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.Description(System.Enum)" source="extension">
          <apidata name="Description" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute(System.Enum,System.Type)" source="extension">
          <apidata name="GetCustomAttribute" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributeType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Attribute" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.CommandLine.SingleLineParser.SignalId.Character">
      <apidata name="Character" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser.SignalId" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser" ref="true" />
        </type>
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser.SignalId" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.CommandLine.SingleLineParser.SignalId.Quote">
      <apidata name="Quote" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser.SignalId" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser.SignalId" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.CommandLine.SingleLineParser.SignalId.Space">
      <apidata name="Space" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser.SignalId" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser.SignalId" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.CommandLine.SingleLineParser.State">
      <apidata name="State" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:Gehtsoft.Tools.CommandLine.SingleLineParser.State.Nothing" />
        <element api="F:Gehtsoft.Tools.CommandLine.SingleLineParser.State.Value" />
        <element api="F:Gehtsoft.Tools.CommandLine.SingleLineParser.State.InQuoteValue" />
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute``1(System.Enum)" source="extension">
          <apidata name="GetCustomAttribute" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T">
              <constrained>
                <type api="T:System.Attribute" ref="true" />
              </constrained>
            </template>
          </templates>
          <returns>
            <template name="T" index="0" api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute``1(System.Enum)" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.Description(System.Enum)" source="extension">
          <apidata name="Description" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute(System.Enum,System.Type)" source="extension">
          <apidata name="GetCustomAttribute" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributeType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Attribute" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.CommandLine.SingleLineParser.State.InQuoteValue">
      <apidata name="InQuoteValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser.State" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser" ref="true" />
        </type>
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser.State" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.CommandLine.SingleLineParser.State.Nothing">
      <apidata name="Nothing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser.State" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser.State" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.CommandLine.SingleLineParser.State.Value">
      <apidata name="Value" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser.State" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser.State" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser">
      <apidata name="StoringCommandLineParser" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.mArguments" />
        <element api="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.OnKey(Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription,System.Object[])" />
        <element api="E:Gehtsoft.Tools.CommandLine.CommandLineParser.OnKey" />
        <element api="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.OnError(Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError,Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription,System.String)" />
        <element api="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.#ctor" />
        <element api="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Reset" />
        <element api="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Arguments" />
        <element api="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Errors" />
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParser.AddKey(Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription)" />
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParser.AddKey(Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType[])" />
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParser.AddKey(System.String,Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType[])" />
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParser.AddKey(System.String,System.Boolean,Gehtsoft.Tools.CommandLine.CommandLineParser.ParameterType[])" />
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParser.Parse(System.String[])" />
        <element api="M:Gehtsoft.Tools.CommandLine.CommandLineParser.Parse(System.String)" />
        <element api="E:Gehtsoft.Tools.CommandLine.CommandLineParser.OnCommandLineError" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Arguments">
      <apidata name="Arguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Arguments" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Errors">
      <apidata name="Errors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Errors" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ErrorCollection" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.mArguments">
      <apidata name="mArguments" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.OnError(Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError,Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription,System.String)">
      <apidata name="OnError" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="errorCode">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError" ref="false">
            <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
          </type>
        </parameter>
        <parameter name="key">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
            <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
          </type>
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.OnKey(Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription,System.Object[])">
      <apidata name="OnKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
            <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
          </type>
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Reset">
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument">
      <apidata name="Argument" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument.GetParameter``1(System.Int32)" />
        <element api="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument.#ctor(Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription,System.Object[])" />
        <element api="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument.Key" />
        <element api="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument.Arguments" />
        <element api="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument.ParametersCount" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument.#ctor(Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="key">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
            <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
          </type>
        </parameter>
        <parameter name="arguments">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument.Arguments">
      <apidata name="Arguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_Arguments" />
      <setter name="set_Arguments" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument.GetParameter``1(System.Int32)">
      <apidata name="GetParameter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument.GetParameter``1(System.Int32)" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument.Key">
      <apidata name="Key" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_Key" />
      <setter name="set_Key" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument.ParametersCount">
      <apidata name="ParametersCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParametersCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection">
      <apidata name="ArgumentCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument" ref="true">
              <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection.Add(Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument)" />
        <element api="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection.GetEnumerator" />
        <element api="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection.#ctor" />
        <element api="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection.Count" />
        <element api="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection.Item(System.Int32)" />
        <element api="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection.Item(System.String,System.Int32)" />
        <element api="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection.Item(Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription,System.Int32)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumerationUtils.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" source="extension">
          <apidata name="ForEach" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument" ref="true">
              <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Action`1" ref="true">
                <specialization>
                  <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument" ref="true">
                    <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumerationUtils" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection.Add(Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="family or assembly" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument" ref="true">
            <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument" ref="true">
              <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument" ref="true">
                <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection.Item(Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription,System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="key">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
            <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
          </type>
        </parameter>
        <parameter name="occurrence">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection.Item(System.String,System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="occurrence">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Argument" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ArgumentCollection" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error">
      <apidata name="Error" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error.#ctor(Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError,Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription,System.String)" />
        <element api="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error.ErrorCode" />
        <element api="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error.Key" />
        <element api="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error.Value" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error.#ctor(Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError,Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="errorCode">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError" ref="false">
            <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
          </type>
        </parameter>
        <parameter name="key">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
            <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
          </type>
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error.ErrorCode">
      <apidata name="ErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorCode" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.CommandLineError" ref="false">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error.Key">
      <apidata name="Key" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Key" />
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser.KeyDescription" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.CommandLineParser" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error.Value">
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ErrorCollection">
      <apidata name="ErrorCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error" ref="true">
              <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ErrorCollection.Add(Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error)" />
        <element api="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ErrorCollection.GetEnumerator" />
        <element api="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ErrorCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ErrorCollection.#ctor" />
        <element api="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ErrorCollection.Count" />
        <element api="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ErrorCollection.Item(System.Int32)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumerationUtils.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" source="extension">
          <apidata name="ForEach" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error" ref="true">
              <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Action`1" ref="true">
                <specialization>
                  <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error" ref="true">
                    <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumerationUtils" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ErrorCollection.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ErrorCollection" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ErrorCollection.Add(Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="family or assembly" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="error">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error" ref="true">
            <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ErrorCollection" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ErrorCollection.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ErrorCollection" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ErrorCollection.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error" ref="true">
              <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error" ref="true">
                <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ErrorCollection" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ErrorCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.Error" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ErrorCollection" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ErrorCollection.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.CommandLine" module="Gehtsoft.Tools.CommandLine" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.CommandLine" />
        <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser.ErrorCollection" ref="true">
          <type api="T:Gehtsoft.Tools.CommandLine.StoringCommandLineParser" ref="true" />
        </type>
      </containers>
    </api>
    <api id="N:Gehtsoft.Tools.ConfigurationProfile">
      <apidata name="Gehtsoft.Tools.ConfigurationProfile" group="namespace" />
      <elements>
        <element api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" />
        <element api="T:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory" />
        <element api="T:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.ProfileChangedDelegate" />
        <element api="T:Gehtsoft.Tools.ConfigurationProfile.ProfileLoader" />
      </elements>
    </api>
    <api id="T:Gehtsoft.Tools.ConfigurationProfile.Profile">
      <apidata name="Profile" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.HasValue(System.String,System.String)" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.HasSection(System.String)" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Get``1(System.String,System.String)" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Get``1(System.String,System.String,``0)" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Get(System.String,System.String)" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Get(System.String,System.String,System.String)" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Set``1(System.String,System.String,``0)" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Set(System.String,System.String,System.String)" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.SetBinary(System.String,System.String,System.Byte[])" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.GetBinary(System.String,System.String)" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.SetSecure(System.String,System.String,System.String,System.String)" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.GetSecure(System.String,System.String,System.String,System.String)" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.GetSections" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.GetKeys(System.String)" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Serialize``1(System.String,System.String,``0)" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Deserialize``1(System.String,System.String)" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Deserialize``1(System.String,System.String,``0)" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.RemoveKey(System.String,System.String)" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.RemoveSection(System.String)" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Equals(Gehtsoft.Tools.ConfigurationProfile.Profile)" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Equals(System.Object)" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.GetHashCode" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.#ctor" />
        <element api="P:Gehtsoft.Tools.ConfigurationProfile.Profile.Mutex" />
        <element api="P:Gehtsoft.Tools.ConfigurationProfile.Profile.Changed" />
        <element api="P:Gehtsoft.Tools.ConfigurationProfile.Profile.Source" />
        <element api="P:Gehtsoft.Tools.ConfigurationProfile.Profile.SectionsCount" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.ConfigurationProfile.Profile.Changed">
      <apidata name="Changed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_Changed" />
      <setter name="set_Changed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Deserialize``1(System.String,System.String)">
      <apidata name="Deserialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="section">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Deserialize``1(System.String,System.String)" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Deserialize``1(System.String,System.String,``0)">
      <apidata name="Deserialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="section">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultT">
          <template name="T" index="0" api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Deserialize``1(System.String,System.String,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Deserialize``1(System.String,System.String,``0)" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Equals(Gehtsoft.Tools.ConfigurationProfile.Profile)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Get(System.String,System.String)">
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="section">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Get``1(System.String,System.String)">
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="section">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Get``1(System.String,System.String)" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Get(System.String,System.String,System.String)">
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="section">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Get``1(System.String,System.String,``0)">
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="section">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <template name="T" index="0" api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Get``1(System.String,System.String,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Get``1(System.String,System.String,``0)" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.GetBinary(System.String,System.String)">
      <apidata name="GetBinary" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="section">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.GetKeys(System.String)">
      <apidata name="GetKeys" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="section">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.GetSections">
      <apidata name="GetSections" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.GetSecure(System.String,System.String,System.String,System.String)">
      <apidata name="GetSecure" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="section">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.HasSection(System.String)">
      <apidata name="HasSection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="section">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.HasValue(System.String,System.String)">
      <apidata name="HasValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="section">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.ConfigurationProfile.Profile.Mutex">
      <apidata name="Mutex" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Mutex" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.RemoveKey(System.String,System.String)">
      <apidata name="RemoveKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="section">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.RemoveSection(System.String)">
      <apidata name="RemoveSection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="section">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.ConfigurationProfile.Profile.SectionsCount">
      <apidata name="SectionsCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SectionsCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Serialize``1(System.String,System.String,``0)">
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="section">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="obj">
          <template name="T" index="0" api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Serialize``1(System.String,System.String,``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Set(System.String,System.String,System.String)">
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="section">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Set``1(System.String,System.String,``0)">
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="section">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="M:Gehtsoft.Tools.ConfigurationProfile.Profile.Set``1(System.String,System.String,``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.SetBinary(System.String,System.String,System.Byte[])">
      <apidata name="SetBinary" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="section">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="arr">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.Profile.SetSecure(System.String,System.String,System.String,System.String)">
      <apidata name="SetSecure" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="section">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.ConfigurationProfile.Profile.Source">
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_Source" />
      <setter name="set_Source" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory">
      <apidata name="ProfileFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.#ctor" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.Finalize" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.Configure(System.String,System.Boolean,System.Boolean)" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.Save" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.Close" />
        <element api="P:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.Encrypt" />
        <element api="P:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.Decrypt" />
        <element api="P:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.Instance" />
        <element api="P:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.Profile" />
        <element api="E:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.ProfileChanged" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.Close">
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.Configure(System.String,System.Boolean,System.Boolean)">
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="watchFile">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="autoSave">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.Decrypt">
      <apidata name="Decrypt" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Decrypt" />
      <setter name="set_Decrypt" />
      <returns>
        <type api="T:System.Func`4" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.Encrypt">
      <apidata name="Encrypt" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Encrypt" />
      <setter name="set_Encrypt" />
      <returns>
        <type api="T:System.Func`3" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.Instance">
      <apidata name="Instance" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Instance" />
      <returns>
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.Profile">
      <apidata name="Profile" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Profile" />
      <returns>
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory" ref="true" />
      </containers>
    </api>
    <api id="E:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.ProfileChanged">
      <apidata name="ProfileChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ProfileChanged" />
      <remover name="remove_ProfileChanged" />
      <eventhandler>
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.ProfileChangedDelegate" ref="true">
          <type api="T:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory" ref="true" />
        </type>
      </eventhandler>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.Save">
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory.ProfileChangedDelegate">
      <apidata name="ProfileChangedDelegate" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.ProfileFactory" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.ConfigurationProfile.ProfileLoader">
      <apidata name="ProfileLoader" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.ProfileLoader.LoadProfile(System.String)" />
        <element api="M:Gehtsoft.Tools.ConfigurationProfile.ProfileLoader.SaveProfile(System.String,Gehtsoft.Tools.ConfigurationProfile.Profile)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.ProfileLoader.LoadProfile(System.String)">
      <apidata name="LoadProfile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.ProfileLoader" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ConfigurationProfile.ProfileLoader.SaveProfile(System.String,Gehtsoft.Tools.ConfigurationProfile.Profile)">
      <apidata name="SaveProfile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="profile">
          <type api="T:Gehtsoft.Tools.ConfigurationProfile.Profile" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Profile" module="Gehtsoft.Tools.Profile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ConfigurationProfile" />
        <type api="T:Gehtsoft.Tools.ConfigurationProfile.ProfileLoader" ref="true" />
      </containers>
    </api>
    <api id="N:Gehtsoft.Tools.Crypto">
      <apidata name="Gehtsoft.Tools.Crypto" group="namespace" />
      <elements>
        <element api="T:Gehtsoft.Tools.Crypto.MDFourHash" />
        <element api="T:Gehtsoft.Tools.Crypto.ByteSaver" />
        <element api="T:Gehtsoft.Tools.Crypto.ByteSaver.StringType" />
        <element api="T:Gehtsoft.Tools.Crypto.Crc32" />
        <element api="T:Gehtsoft.Tools.Crypto.RCFourTransform" />
        <element api="T:Gehtsoft.Tools.Crypto.RCFourAlgorithm" />
      </elements>
    </api>
    <api id="T:Gehtsoft.Tools.Crypto.ByteSaver">
      <apidata name="ByteSaver" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.Crypto.ByteSaver.WriteUInt32(System.Byte[],System.Int32,System.UInt32,System.Boolean)" />
        <element api="M:Gehtsoft.Tools.Crypto.ByteSaver.ReadUInt32(System.Byte[],System.Int32,System.Boolean)" />
        <element api="M:Gehtsoft.Tools.Crypto.ByteSaver.WriteUInt16(System.Byte[],System.Int32,System.UInt16,System.Boolean)" />
        <element api="M:Gehtsoft.Tools.Crypto.ByteSaver.ReadUInt16(System.Byte[],System.Int32,System.Boolean)" />
        <element api="M:Gehtsoft.Tools.Crypto.ByteSaver.TextLength(System.String,Gehtsoft.Tools.Crypto.ByteSaver.StringType,System.Text.Encoding)" />
        <element api="M:Gehtsoft.Tools.Crypto.ByteSaver.WriteText(System.Byte[],System.Int32,System.String,Gehtsoft.Tools.Crypto.ByteSaver.StringType,System.Text.Encoding)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.ByteSaver.ReadUInt16(System.Byte[],System.Int32,System.Boolean)">
      <apidata name="ReadUInt16" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="littleEndian">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.ByteSaver" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.ByteSaver.ReadUInt32(System.Byte[],System.Int32,System.Boolean)">
      <apidata name="ReadUInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="littleEndian">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.ByteSaver" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.ByteSaver.TextLength(System.String,Gehtsoft.Tools.Crypto.ByteSaver.StringType,System.Text.Encoding)">
      <apidata name="TextLength" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:Gehtsoft.Tools.Crypto.ByteSaver.StringType" ref="false">
            <type api="T:Gehtsoft.Tools.Crypto.ByteSaver" ref="true" />
          </type>
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.ByteSaver" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.ByteSaver.WriteText(System.Byte[],System.Int32,System.String,Gehtsoft.Tools.Crypto.ByteSaver.StringType,System.Text.Encoding)">
      <apidata name="WriteText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:Gehtsoft.Tools.Crypto.ByteSaver.StringType" ref="false">
            <type api="T:Gehtsoft.Tools.Crypto.ByteSaver" ref="true" />
          </type>
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.ByteSaver" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.ByteSaver.WriteUInt16(System.Byte[],System.Int32,System.UInt16,System.Boolean)">
      <apidata name="WriteUInt16" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="littleEndian">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.ByteSaver" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.ByteSaver.WriteUInt32(System.Byte[],System.Int32,System.UInt32,System.Boolean)">
      <apidata name="WriteUInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="littleEndian">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.ByteSaver" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Crypto.ByteSaver.StringType">
      <apidata name="StringType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:Gehtsoft.Tools.Crypto.ByteSaver.StringType.FixedLength" />
        <element api="F:Gehtsoft.Tools.Crypto.ByteSaver.StringType.Pascal" />
        <element api="F:Gehtsoft.Tools.Crypto.ByteSaver.StringType.ASCIZ" />
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute``1(System.Enum)" source="extension">
          <apidata name="GetCustomAttribute" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T">
              <constrained>
                <type api="T:System.Attribute" ref="true" />
              </constrained>
            </template>
          </templates>
          <returns>
            <template name="T" index="0" api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute``1(System.Enum)" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.Description(System.Enum)" source="extension">
          <apidata name="Description" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute(System.Enum,System.Type)" source="extension">
          <apidata name="GetCustomAttribute" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributeType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Attribute" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.ByteSaver" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Crypto.ByteSaver.StringType.ASCIZ">
      <apidata name="ASCIZ" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.Crypto.ByteSaver.StringType" ref="false">
          <type api="T:Gehtsoft.Tools.Crypto.ByteSaver" ref="true" />
        </type>
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.ByteSaver.StringType" ref="false">
          <type api="T:Gehtsoft.Tools.Crypto.ByteSaver" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Crypto.ByteSaver.StringType.FixedLength">
      <apidata name="FixedLength" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.Crypto.ByteSaver.StringType" ref="false">
          <type api="T:Gehtsoft.Tools.Crypto.ByteSaver" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.ByteSaver.StringType" ref="false">
          <type api="T:Gehtsoft.Tools.Crypto.ByteSaver" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Crypto.ByteSaver.StringType.Pascal">
      <apidata name="Pascal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.Crypto.ByteSaver.StringType" ref="false">
          <type api="T:Gehtsoft.Tools.Crypto.ByteSaver" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.ByteSaver.StringType" ref="false">
          <type api="T:Gehtsoft.Tools.Crypto.ByteSaver" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Crypto.Crc32">
      <apidata name="Crc32" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.Crypto.Crc32.#ctor" />
        <element api="M:Gehtsoft.Tools.Crypto.Crc32.#ctor(System.UInt32,System.UInt32)" />
        <element api="M:Gehtsoft.Tools.Crypto.Crc32.UpdateHash(System.Byte)" />
        <element api="M:Gehtsoft.Tools.Crypto.Crc32.UpdateHash(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Gehtsoft.Tools.Crypto.Crc32.UpdateHash(System.Byte[])" />
        <element api="M:Gehtsoft.Tools.Crypto.Crc32.UpdateHash(System.String,System.Text.Encoding)" />
        <element api="M:Gehtsoft.Tools.Crypto.Crc32.UpdateHash(System.String)" />
        <element api="M:Gehtsoft.Tools.Crypto.Crc32.Initialize" />
        <element api="M:Gehtsoft.Tools.Crypto.Crc32.HashCore(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Gehtsoft.Tools.Crypto.Crc32.HashFinal" />
        <element api="M:Gehtsoft.Tools.Crypto.Crc32.GetHash(System.String)" />
        <element api="P:Gehtsoft.Tools.Crypto.Crc32.IsLittleEndian" />
        <element api="P:Gehtsoft.Tools.Crypto.Crc32.HashSize" />
        <element api="P:Gehtsoft.Tools.Crypto.Crc32.CanTransformMultipleBlocks" />
        <element api="P:Gehtsoft.Tools.Crypto.Crc32.CanReuseTransform" />
        <element api="P:Gehtsoft.Tools.Crypto.Crc32.Hash" />
        <element api="P:Gehtsoft.Tools.Crypto.Crc32.Checksum" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue">
          <apidata name="HashSizeValue" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashValue">
          <apidata name="HashValue" group="member" subgroup="field" />
          <memberdata visibility="family or assembly" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="F:System.Security.Cryptography.HashAlgorithm.State">
          <apidata name="State" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)">
          <apidata name="ComputeHash" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="inputStream">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])">
          <apidata name="ComputeHash" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <apidata name="ComputeHash" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <apidata name="TransformBlock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="inputBuffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="inputOffset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="inputCount">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="outputBuffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="outputOffset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
              <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <apidata name="TransformFinalBlock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="inputBuffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="inputOffset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="inputCount">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <implements>
            <member api="M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
              <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.System#IDisposable#Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <implements>
            <member api="M:System.IDisposable.Dispose">
              <type api="T:System.IDisposable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="disposing">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize">
          <apidata name="InputBlockSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_InputBlockSize" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Security.Cryptography.ICryptoTransform.InputBlockSize">
              <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize">
          <apidata name="OutputBlockSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_OutputBlockSize" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize">
              <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.Crc32.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.Crc32" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.Crc32.#ctor(System.UInt32,System.UInt32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="polynomial">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="seed">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.Crc32" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Crypto.Crc32.CanReuseTransform">
      <apidata name="CanReuseTransform" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.HashAlgorithm.CanReuseTransform">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanReuseTransform" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform">
          <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.Crc32" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Crypto.Crc32.CanTransformMultipleBlocks">
      <apidata name="CanTransformMultipleBlocks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanTransformMultipleBlocks" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks">
          <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.Crc32" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Crypto.Crc32.Checksum">
      <apidata name="Checksum" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Checksum" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.Crc32" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.Crc32.GetHash(System.String)">
      <apidata name="GetHash" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.Crc32" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Crypto.Crc32.Hash">
      <apidata name="Hash" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.HashAlgorithm.Hash">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Hash" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.Crc32" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.Crc32.HashCore(System.Byte[],System.Int32,System.Int32)">
      <apidata name="HashCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="ibStart">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="cbSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.Crc32" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.Crc32.HashFinal">
      <apidata name="HashFinal" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.HashFinal">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.Crc32" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Crypto.Crc32.HashSize">
      <apidata name="HashSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.HashAlgorithm.HashSize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HashSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.Crc32" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.Crc32.Initialize">
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.Initialize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.Crc32" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Crypto.Crc32.IsLittleEndian">
      <apidata name="IsLittleEndian" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsLittleEndian" />
      <setter name="set_IsLittleEndian" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.Crc32" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.Crc32.UpdateHash(System.Byte)">
      <apidata name="UpdateHash" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.Crc32" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.Crc32.UpdateHash(System.Byte[])">
      <apidata name="UpdateHash" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.Crc32" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.Crc32.UpdateHash(System.Byte[],System.Int32,System.Int32)">
      <apidata name="UpdateHash" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="from">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.Crc32" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.Crc32.UpdateHash(System.String)">
      <apidata name="UpdateHash" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.Crc32" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.Crc32.UpdateHash(System.String,System.Text.Encoding)">
      <apidata name="UpdateHash" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.Crc32" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Crypto.MDFourHash">
      <apidata name="MDFourHash" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.Crypto.MDFourHash.#ctor" />
        <element api="M:Gehtsoft.Tools.Crypto.MDFourHash.Initialize" />
        <element api="M:Gehtsoft.Tools.Crypto.MDFourHash.HashCore(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Gehtsoft.Tools.Crypto.MDFourHash.HashFinal" />
        <element api="M:Gehtsoft.Tools.Crypto.MDFourHash.GetHash(System.Byte[])" />
        <element api="M:Gehtsoft.Tools.Crypto.MDFourHash.GetHash(System.String)" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue">
          <apidata name="HashSizeValue" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashValue">
          <apidata name="HashValue" group="member" subgroup="field" />
          <memberdata visibility="family or assembly" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="F:System.Security.Cryptography.HashAlgorithm.State">
          <apidata name="State" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)">
          <apidata name="ComputeHash" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="inputStream">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])">
          <apidata name="ComputeHash" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <apidata name="ComputeHash" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <apidata name="TransformBlock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="inputBuffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="inputOffset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="inputCount">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="outputBuffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="outputOffset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
              <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <apidata name="TransformFinalBlock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="inputBuffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="inputOffset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="inputCount">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <implements>
            <member api="M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
              <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.System#IDisposable#Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <implements>
            <member api="M:System.IDisposable.Dispose">
              <type api="T:System.IDisposable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="disposing">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Cryptography.HashAlgorithm.HashSize">
          <apidata name="HashSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_HashSize" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Cryptography.HashAlgorithm.Hash">
          <apidata name="Hash" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Hash" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize">
          <apidata name="InputBlockSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_InputBlockSize" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Security.Cryptography.ICryptoTransform.InputBlockSize">
              <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize">
          <apidata name="OutputBlockSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_OutputBlockSize" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize">
              <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks">
          <apidata name="CanTransformMultipleBlocks" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CanTransformMultipleBlocks" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks">
              <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Cryptography.HashAlgorithm.CanReuseTransform">
          <apidata name="CanReuseTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CanReuseTransform" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform">
              <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.MDFourHash.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.MDFourHash" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.MDFourHash.GetHash(System.Byte[])">
      <apidata name="GetHash" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.MDFourHash" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.MDFourHash.GetHash(System.String)">
      <apidata name="GetHash" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.MDFourHash" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.MDFourHash.HashCore(System.Byte[],System.Int32,System.Int32)">
      <apidata name="HashCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.MDFourHash" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.MDFourHash.HashFinal">
      <apidata name="HashFinal" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.HashFinal">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.MDFourHash" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.MDFourHash.Initialize">
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.Initialize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.MDFourHash" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Crypto.RCFourAlgorithm">
      <apidata name="RCFourAlgorithm" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.Crypto.RCFourAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor">
          <apidata name="CreateEncryptor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.Crypto.RCFourAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])" />
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor">
          <apidata name="CreateDecryptor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.Crypto.RCFourAlgorithm.GenerateKey" />
        <element api="M:Gehtsoft.Tools.Crypto.RCFourAlgorithm.GenerateIV" />
        <element api="M:Gehtsoft.Tools.Crypto.RCFourAlgorithm.Encode(System.String,System.String)" />
        <element api="M:Gehtsoft.Tools.Crypto.RCFourAlgorithm.Decode(System.String,System.String,System.String)" />
        <element api="M:Gehtsoft.Tools.Crypto.RCFourAlgorithm.#ctor" />
        <element api="P:Gehtsoft.Tools.Crypto.RCFourAlgorithm.BlockSize" />
        <element api="P:Gehtsoft.Tools.Crypto.RCFourAlgorithm.FeedbackSize" />
        <element api="P:Gehtsoft.Tools.Crypto.RCFourAlgorithm.LegalKeySizes" />
        <element api="P:Gehtsoft.Tools.Crypto.RCFourAlgorithm.LegalBlockSizes" />
        <element api="P:Gehtsoft.Tools.Crypto.RCFourAlgorithm.Padding" />
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue">
          <apidata name="BlockSizeValue" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue">
          <apidata name="FeedbackSizeValue" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.IVValue">
          <apidata name="IVValue" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.KeyValue">
          <apidata name="KeyValue" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue">
          <apidata name="LegalBlockSizesValue" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Security.Cryptography.KeySizes" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue">
          <apidata name="LegalKeySizesValue" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Security.Cryptography.KeySizes" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue">
          <apidata name="KeySizeValue" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.ModeValue">
          <apidata name="ModeValue" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Security.Cryptography.CipherMode" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="F:System.Security.Cryptography.SymmetricAlgorithm.PaddingValue">
          <apidata name="PaddingValue" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Security.Cryptography.PaddingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.System#IDisposable#Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <implements>
            <member api="M:System.IDisposable.Dispose">
              <type api="T:System.IDisposable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="disposing">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)">
          <apidata name="ValidKeySize" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bitLength">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.IV">
          <apidata name="IV" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IV" />
          <setter name="set_IV" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.Key">
          <apidata name="Key" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Key" />
          <setter name="set_Key" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.KeySize">
          <apidata name="KeySize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_KeySize" />
          <setter name="set_KeySize" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Cryptography.SymmetricAlgorithm.Mode">
          <apidata name="Mode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Mode" />
          <setter name="set_Mode" />
          <returns>
            <type api="T:System.Security.Cryptography.CipherMode" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.RCFourAlgorithm.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Crypto.RCFourAlgorithm.BlockSize">
      <apidata name="BlockSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.SymmetricAlgorithm.BlockSize">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_BlockSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.RCFourAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])">
      <apidata name="CreateDecryptor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="rgbKey">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="rgbIV">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.RCFourAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])">
      <apidata name="CreateEncryptor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="rgbKey">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="rgbIV">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.RCFourAlgorithm.Decode(System.String,System.String,System.String)">
      <apidata name="Decode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="encoded">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.RCFourAlgorithm.Encode(System.String,System.String)">
      <apidata name="Encode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Crypto.RCFourAlgorithm.FeedbackSize">
      <apidata name="FeedbackSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_FeedbackSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.RCFourAlgorithm.GenerateIV">
      <apidata name="GenerateIV" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.RCFourAlgorithm.GenerateKey">
      <apidata name="GenerateKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Crypto.RCFourAlgorithm.LegalBlockSizes">
      <apidata name="LegalBlockSizes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_LegalBlockSizes" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Security.Cryptography.KeySizes" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Crypto.RCFourAlgorithm.LegalKeySizes">
      <apidata name="LegalKeySizes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_LegalKeySizes" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Security.Cryptography.KeySizes" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Crypto.RCFourAlgorithm.Padding">
      <apidata name="Padding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.SymmetricAlgorithm.Padding">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Padding" />
      <setter name="set_Padding" />
      <returns>
        <type api="T:System.Security.Cryptography.PaddingMode" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Crypto.RCFourTransform">
      <apidata name="RCFourTransform" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Tools.Crypto.RCFourTransform.#ctor" />
        <element api="M:Gehtsoft.Tools.Crypto.RCFourTransform.#ctor(System.String,System.Boolean)" />
        <element api="M:Gehtsoft.Tools.Crypto.RCFourTransform.#ctor(System.Byte[])" />
        <element api="M:Gehtsoft.Tools.Crypto.RCFourTransform.Update(System.Byte)" />
        <element api="M:Gehtsoft.Tools.Crypto.RCFourTransform.Update(System.Byte[],System.Byte[],System.Int32,System.Int32,System.Int32)" />
        <element api="M:Gehtsoft.Tools.Crypto.RCFourTransform.Update(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Gehtsoft.Tools.Crypto.RCFourTransform.Update(System.Byte[])" />
        <element api="M:Gehtsoft.Tools.Crypto.RCFourTransform.Clear" />
        <element api="M:Gehtsoft.Tools.Crypto.RCFourTransform.Dispose" />
        <element api="M:Gehtsoft.Tools.Crypto.RCFourTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:Gehtsoft.Tools.Crypto.RCFourTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
        <element api="P:Gehtsoft.Tools.Crypto.RCFourTransform.InputBlockSize" />
        <element api="P:Gehtsoft.Tools.Crypto.RCFourTransform.OutputBlockSize" />
        <element api="P:Gehtsoft.Tools.Crypto.RCFourTransform.CanTransformMultipleBlocks" />
        <element api="P:Gehtsoft.Tools.Crypto.RCFourTransform.CanReuseTransform" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.RCFourTransform.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourTransform" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.RCFourTransform.#ctor(System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourTransform" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.RCFourTransform.#ctor(System.String,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="useHash">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourTransform" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Crypto.RCFourTransform.CanReuseTransform">
      <apidata name="CanReuseTransform" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CanReuseTransform" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform">
          <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourTransform" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Crypto.RCFourTransform.CanTransformMultipleBlocks">
      <apidata name="CanTransformMultipleBlocks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CanTransformMultipleBlocks" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks">
          <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourTransform" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.RCFourTransform.Clear">
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourTransform" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.RCFourTransform.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourTransform" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Crypto.RCFourTransform.InputBlockSize">
      <apidata name="InputBlockSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_InputBlockSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Security.Cryptography.ICryptoTransform.InputBlockSize">
          <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourTransform" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Crypto.RCFourTransform.OutputBlockSize">
      <apidata name="OutputBlockSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_OutputBlockSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize">
          <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourTransform" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.RCFourTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="TransformBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourTransform" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.RCFourTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
      <apidata name="TransformFinalBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <implements>
        <member api="M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourTransform" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.RCFourTransform.Update(System.Byte)">
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="src">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourTransform" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.RCFourTransform.Update(System.Byte[])">
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourTransform" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.RCFourTransform.Update(System.Byte[],System.Byte[],System.Int32,System.Int32,System.Int32)">
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="output">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="srcfrom">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputfrom">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="lenght">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourTransform" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Crypto.RCFourTransform.Update(System.Byte[],System.Int32,System.Int32)">
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="from">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Crypto" module="Gehtsoft.Tools.Crypto" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Crypto" />
        <type api="T:Gehtsoft.Tools.Crypto.RCFourTransform" ref="true" />
      </containers>
    </api>
    <api id="N:Gehtsoft.Tools.FileUtils">
      <apidata name="Gehtsoft.Tools.FileUtils" group="namespace" />
      <elements>
        <element api="T:Gehtsoft.Tools.FileUtils.PathUtil" />
        <element api="T:Gehtsoft.Tools.FileUtils.TypePathUtil" />
      </elements>
    </api>
    <api id="T:Gehtsoft.Tools.FileUtils.PathUtil">
      <apidata name="PathUtil" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.FileUtils.PathUtil.RelativePath(System.String,System.String)" />
        <element api="M:Gehtsoft.Tools.FileUtils.PathUtil.DeleteDirectory(System.String)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.FileUtils" module="Gehtsoft.Tools.FileUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.FileUtils" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.FileUtils.PathUtil.DeleteDirectory(System.String)">
      <apidata name="DeleteDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.FileUtils" module="Gehtsoft.Tools.FileUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.FileUtils" />
        <type api="T:Gehtsoft.Tools.FileUtils.PathUtil" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.FileUtils.PathUtil.RelativePath(System.String,System.String)">
      <apidata name="RelativePath" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="absoluteBasePath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="absolutePathToConvert">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.FileUtils" module="Gehtsoft.Tools.FileUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.FileUtils" />
        <type api="T:Gehtsoft.Tools.FileUtils.PathUtil" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.FileUtils.TypePathUtil">
      <apidata name="TypePathUtil" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.FileUtils.TypePathUtil.ApplicationName" />
        <element api="M:Gehtsoft.Tools.FileUtils.TypePathUtil.ApplicationFolder" />
        <element api="M:Gehtsoft.Tools.FileUtils.TypePathUtil.TypeFileName(System.Type)" />
        <element api="M:Gehtsoft.Tools.FileUtils.TypePathUtil.TypeFolder(System.Type)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.FileUtils" module="Gehtsoft.Tools.FileUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.FileUtils" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.FileUtils.TypePathUtil.ApplicationFolder">
      <apidata name="ApplicationFolder" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.FileUtils" module="Gehtsoft.Tools.FileUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.FileUtils" />
        <type api="T:Gehtsoft.Tools.FileUtils.TypePathUtil" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.FileUtils.TypePathUtil.ApplicationName">
      <apidata name="ApplicationName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.FileUtils" module="Gehtsoft.Tools.FileUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.FileUtils" />
        <type api="T:Gehtsoft.Tools.FileUtils.TypePathUtil" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.FileUtils.TypePathUtil.TypeFileName(System.Type)">
      <apidata name="TypeFileName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.FileUtils" module="Gehtsoft.Tools.FileUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.FileUtils" />
        <type api="T:Gehtsoft.Tools.FileUtils.TypePathUtil" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.FileUtils.TypePathUtil.TypeFolder(System.Type)">
      <apidata name="TypeFolder" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.FileUtils" module="Gehtsoft.Tools.FileUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.FileUtils" />
        <type api="T:Gehtsoft.Tools.FileUtils.TypePathUtil" ref="true" />
      </containers>
    </api>
    <api id="N:Gehtsoft.Tools.IoC">
      <apidata name="Gehtsoft.Tools.IoC" group="namespace" />
      <elements>
        <element api="T:Gehtsoft.Tools.IoC.RegistryMode" />
        <element api="T:Gehtsoft.Tools.IoC.IClassRegistry" />
        <element api="T:Gehtsoft.Tools.IoC.IIoCFactory" />
        <element api="T:Gehtsoft.Tools.IoC.IoCFactory" />
      </elements>
    </api>
    <api id="T:Gehtsoft.Tools.IoC.IClassRegistry">
      <apidata name="IClassRegistry" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Gehtsoft.Tools.IoC.IIoCFactory" ref="true" />
        <type api="T:Gehtsoft.Tools.IoC.IoCFactory" ref="true" />
      </implementors>
      <elements>
        <element api="M:Gehtsoft.Tools.IoC.IClassRegistry.Add(System.Type,System.Type,Gehtsoft.Tools.IoC.RegistryMode)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.IClassRegistry.Add(System.Type,System.Type,Gehtsoft.Tools.IoC.RegistryMode)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="registryType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="implementationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:Gehtsoft.Tools.IoC.RegistryMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC" />
        <type api="T:Gehtsoft.Tools.IoC.IClassRegistry" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.IoC.IIoCFactory">
      <apidata name="IIoCFactory" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:System.IServiceProvider" ref="true" />
        <type api="T:Gehtsoft.Tools.IoC.IClassRegistry" ref="true" />
      </implements>
      <implementors>
        <type api="T:Gehtsoft.Tools.IoC.IoCFactory" ref="true" />
      </implementors>
      <elements>
        <element api="M:Gehtsoft.Tools.IoC.IIoCFactory.GetService(System.Type,System.Object[])" />
        <element api="M:System.IServiceProvider.GetService(System.Type)">
          <apidata name="GetService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="serviceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.IServiceProvider" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.IoC.IClassRegistry.Add(System.Type,System.Type,Gehtsoft.Tools.IoC.RegistryMode)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.IIoCFactory.GetService(System.Type,System.Object[])">
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC" />
        <type api="T:Gehtsoft.Tools.IoC.IIoCFactory" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.IoC.IoCFactory">
      <apidata name="IoCFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.Tools.IoC.IIoCFactory" ref="true" />
        <type api="T:System.IServiceProvider" ref="true" />
        <type api="T:Gehtsoft.Tools.IoC.IClassRegistry" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Tools.IoC.IoCFactory.GetService(System.Type)" />
        <element api="M:Gehtsoft.Tools.IoC.IoCFactory.GetService(System.Type,System.Object[])" />
        <element api="M:Gehtsoft.Tools.IoC.IoCFactory.GetService``1" />
        <element api="M:Gehtsoft.Tools.IoC.IoCFactory.GetService``1(System.Object[])" />
        <element api="M:Gehtsoft.Tools.IoC.IoCFactory.Add(System.Type,System.Type,Gehtsoft.Tools.IoC.RegistryMode)" />
        <element api="M:Gehtsoft.Tools.IoC.IoCFactory.Add``1" />
        <element api="M:Gehtsoft.Tools.IoC.IoCFactory.Add``2" />
        <element api="M:Gehtsoft.Tools.IoC.IoCFactory.AddSingleton``1" />
        <element api="M:Gehtsoft.Tools.IoC.IoCFactory.AddSingleton``2" />
        <element api="M:Gehtsoft.Tools.IoC.IoCFactory.AddSingleton``1(``0)" />
        <element api="M:Gehtsoft.Tools.IoC.IoCFactory.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.IoCFactory.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC" />
        <type api="T:Gehtsoft.Tools.IoC.IoCFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.IoCFactory.Add``1">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC" />
        <type api="T:Gehtsoft.Tools.IoC.IoCFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.IoCFactory.Add``2">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TI">
          <constrained>
            <implements>
              <template name="T" index="0" api="M:Gehtsoft.Tools.IoC.IoCFactory.Add``2" />
            </implements>
          </constrained>
        </template>
      </templates>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC" />
        <type api="T:Gehtsoft.Tools.IoC.IoCFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.IoCFactory.Add(System.Type,System.Type,Gehtsoft.Tools.IoC.RegistryMode)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="registryType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="implementationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:Gehtsoft.Tools.IoC.RegistryMode" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.Tools.IoC.IClassRegistry.Add(System.Type,System.Type,Gehtsoft.Tools.IoC.RegistryMode)">
          <type api="T:Gehtsoft.Tools.IoC.IClassRegistry" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC" />
        <type api="T:Gehtsoft.Tools.IoC.IoCFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.IoCFactory.AddSingleton``1">
      <apidata name="AddSingleton" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC" />
        <type api="T:Gehtsoft.Tools.IoC.IoCFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.IoCFactory.AddSingleton``2">
      <apidata name="AddSingleton" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TI">
          <constrained>
            <implements>
              <template name="T" index="0" api="M:Gehtsoft.Tools.IoC.IoCFactory.AddSingleton``2" />
            </implements>
          </constrained>
        </template>
      </templates>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC" />
        <type api="T:Gehtsoft.Tools.IoC.IoCFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.IoCFactory.AddSingleton``1(``0)">
      <apidata name="AddSingleton" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="instance">
          <template name="T" index="0" api="M:Gehtsoft.Tools.IoC.IoCFactory.AddSingleton``1(``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC" />
        <type api="T:Gehtsoft.Tools.IoC.IoCFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.IoCFactory.GetService``1">
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:Gehtsoft.Tools.IoC.IoCFactory.GetService``1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC" />
        <type api="T:Gehtsoft.Tools.IoC.IoCFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.IoCFactory.GetService``1(System.Object[])">
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gehtsoft.Tools.IoC.IoCFactory.GetService``1(System.Object[])" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC" />
        <type api="T:Gehtsoft.Tools.IoC.IoCFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.IoCFactory.GetService(System.Type)">
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IServiceProvider.GetService(System.Type)">
          <type api="T:System.IServiceProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC" />
        <type api="T:Gehtsoft.Tools.IoC.IoCFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.IoCFactory.GetService(System.Type,System.Object[])">
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Tools.IoC.IIoCFactory.GetService(System.Type,System.Object[])">
          <type api="T:Gehtsoft.Tools.IoC.IIoCFactory" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC" />
        <type api="T:Gehtsoft.Tools.IoC.IoCFactory" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.IoC.RegistryMode">
      <apidata name="RegistryMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:Gehtsoft.Tools.IoC.RegistryMode.CreateEveryTime" />
        <element api="F:Gehtsoft.Tools.IoC.RegistryMode.Singleton" />
        <element api="F:Gehtsoft.Tools.IoC.RegistryMode.Cached" />
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute``1(System.Enum)" source="extension">
          <apidata name="GetCustomAttribute" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T">
              <constrained>
                <type api="T:System.Attribute" ref="true" />
              </constrained>
            </template>
          </templates>
          <returns>
            <template name="T" index="0" api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute``1(System.Enum)" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.Description(System.Enum)" source="extension">
          <apidata name="Description" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute(System.Enum,System.Type)" source="extension">
          <apidata name="GetCustomAttribute" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributeType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Attribute" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.IoC.RegistryMode.Cached">
      <apidata name="Cached" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.IoC.RegistryMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC" />
        <type api="T:Gehtsoft.Tools.IoC.RegistryMode" ref="false" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.IoC.RegistryMode.CreateEveryTime">
      <apidata name="CreateEveryTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.IoC.RegistryMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC" />
        <type api="T:Gehtsoft.Tools.IoC.RegistryMode" ref="false" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.IoC.RegistryMode.Singleton">
      <apidata name="Singleton" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.IoC.RegistryMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC" />
        <type api="T:Gehtsoft.Tools.IoC.RegistryMode" ref="false" />
      </containers>
    </api>
    <api id="N:Gehtsoft.Tools.IoC.Attributes">
      <apidata name="Gehtsoft.Tools.IoC.Attributes" group="namespace" />
      <elements>
        <element api="T:Gehtsoft.Tools.IoC.Attributes.InjectAttribute" />
        <element api="T:Gehtsoft.Tools.IoC.Attributes.InjectOptionalAttribute" />
        <element api="T:Gehtsoft.Tools.IoC.Attributes.IoCConstructorAttribute" />
      </elements>
    </api>
    <api id="T:Gehtsoft.Tools.IoC.Attributes.InjectAttribute">
      <apidata name="InjectAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Gehtsoft.Tools.IoC.Attributes.InjectOptionalAttribute" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.IoC.Attributes.InjectAttribute.#ctor" />
        <element api="M:Gehtsoft.Tools.IoC.Attributes.InjectAttribute.#ctor(System.Boolean)" />
        <element api="P:Gehtsoft.Tools.IoC.Attributes.InjectAttribute.Required" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Attributes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Attributes.InjectAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Attributes" />
        <type api="T:Gehtsoft.Tools.IoC.Attributes.InjectAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Attributes.InjectAttribute.#ctor(System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="required">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Attributes" />
        <type api="T:Gehtsoft.Tools.IoC.Attributes.InjectAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.IoC.Attributes.InjectAttribute.Required">
      <apidata name="Required" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Required" />
      <setter name="set_Required" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Attributes" />
        <type api="T:Gehtsoft.Tools.IoC.Attributes.InjectAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.IoC.Attributes.InjectOptionalAttribute">
      <apidata name="InjectOptionalAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Tools.IoC.Attributes.InjectAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.IoC.Attributes.InjectOptionalAttribute.#ctor" />
        <element api="P:Gehtsoft.Tools.IoC.Attributes.InjectAttribute.Required" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Attributes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Attributes.InjectOptionalAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Attributes" />
        <type api="T:Gehtsoft.Tools.IoC.Attributes.InjectOptionalAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.IoC.Attributes.IoCConstructorAttribute">
      <apidata name="IoCConstructorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.IoC.Attributes.IoCConstructorAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Attributes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Constructor" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Attributes.IoCConstructorAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Attributes" />
        <type api="T:Gehtsoft.Tools.IoC.Attributes.IoCConstructorAttribute" ref="true" />
      </containers>
    </api>
    <api id="N:Gehtsoft.Tools.IoC.Tools">
      <apidata name="Gehtsoft.Tools.IoC.Tools" group="namespace" />
      <elements>
        <element api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" />
        <element api="T:Gehtsoft.Tools.IoC.Tools.TypeTools" />
      </elements>
    </api>
    <api id="T:Gehtsoft.Tools.IoC.Tools.TypeFinder">
      <apidata name="TypeFinder" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.NearClass(System.Type)" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.NearClass``1" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.NearClasses(System.Type[])" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.InAllAssemblies" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.ExceptSystem(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.GetTypes(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.GetTypes(System.Collections.Generic.IEnumerable{System.Type})" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.Which(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Func`2)" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.Which(System.Collections.Generic.IEnumerable{System.Type},System.Func`2)" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.WhichIsClass(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.WhichIsClass(System.Collections.Generic.IEnumerable{System.Type})" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.WhichImplements(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Type)" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.WhichImplements(System.Collections.Generic.IEnumerable{System.Type},System.Type)" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.WhichImplements``1(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.WhichImplements``1(System.Collections.Generic.IEnumerable{System.Type})" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.WhichHasAttribute(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Type)" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.WhichHasAttribute``1(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.WhichHasAttribute(System.Collections.Generic.IEnumerable{System.Type},System.Type)" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.WhichHasAttribute``1(System.Collections.Generic.IEnumerable{System.Type})" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.ForAll(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Action{System.Type})" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.ForAll(System.Collections.Generic.IEnumerable{System.Type},System.Action{System.Type})" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.InvokeForAll(System.Collections.Generic.IEnumerable{System.Type},System.String,System.IServiceProvider,System.Object[])" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.RegisterAll(System.Collections.Generic.IEnumerable{System.Type},System.Type,System.Action`2)" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.RegisterAll(System.Collections.Generic.IEnumerable{System.Type},Gehtsoft.Tools.IoC.IClassRegistry,Gehtsoft.Tools.IoC.RegistryMode,System.Type)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.ExceptSystem(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <apidata name="ExceptSystem" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.Assembly" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.ForAll(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Action{System.Type})">
      <apidata name="ForAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumerable">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.ForAll(System.Collections.Generic.IEnumerable{System.Type},System.Action{System.Type})">
      <apidata name="ForAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumerable">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.GetTypes(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <apidata name="GetTypes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.GetTypes(System.Collections.Generic.IEnumerable{System.Type})">
      <apidata name="GetTypes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.InAllAssemblies">
      <apidata name="InAllAssemblies" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.Assembly" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.InvokeForAll(System.Collections.Generic.IEnumerable{System.Type},System.String,System.IServiceProvider,System.Object[])">
      <apidata name="InvokeForAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumerable">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="additionalArguments" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.NearClass``1">
      <apidata name="NearClass" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.Assembly" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.NearClass(System.Type)">
      <apidata name="NearClass" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.Assembly" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.NearClasses(System.Type[])">
      <apidata name="NearClasses" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="types" params="true">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.Assembly" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.RegisterAll(System.Collections.Generic.IEnumerable{System.Type},Gehtsoft.Tools.IoC.IClassRegistry,Gehtsoft.Tools.IoC.RegistryMode,System.Type)">
      <apidata name="RegisterAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumerable">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="registry">
          <type api="T:Gehtsoft.Tools.IoC.IClassRegistry" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:Gehtsoft.Tools.IoC.RegistryMode" ref="false" />
          <argument>
            <type api="T:Gehtsoft.Tools.IoC.RegistryMode" ref="false" />
            <enumValue>
              <field name="CreateEveryTime" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="asInterfaceType">
          <type api="T:System.Type" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.RegisterAll(System.Collections.Generic.IEnumerable{System.Type},System.Type,System.Action`2)">
      <apidata name="RegisterAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumerable">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="asInterfaceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="registerAction">
          <type api="T:System.Action`2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.Which(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Func`2)">
      <apidata name="Which" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.Which(System.Collections.Generic.IEnumerable{System.Type},System.Func`2)">
      <apidata name="Which" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.WhichHasAttribute``1(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <apidata name="WhichHasAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="enumerable">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.WhichHasAttribute(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Type)">
      <apidata name="WhichHasAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumerable">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="attributeType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.WhichHasAttribute``1(System.Collections.Generic.IEnumerable{System.Type})">
      <apidata name="WhichHasAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="enumerable">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.WhichHasAttribute(System.Collections.Generic.IEnumerable{System.Type},System.Type)">
      <apidata name="WhichHasAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumerable">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="attributeType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.WhichImplements``1(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <apidata name="WhichImplements" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="enumerable">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.WhichImplements(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Type)">
      <apidata name="WhichImplements" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumerable">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="implementsInterface">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.WhichImplements``1(System.Collections.Generic.IEnumerable{System.Type})">
      <apidata name="WhichImplements" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="enumerable">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.WhichImplements(System.Collections.Generic.IEnumerable{System.Type},System.Type)">
      <apidata name="WhichImplements" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumerable">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="implementsInterface">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.WhichIsClass(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <apidata name="WhichIsClass" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumerable">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeFinder.WhichIsClass(System.Collections.Generic.IEnumerable{System.Type})">
      <apidata name="WhichIsClass" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumerable">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeFinder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Gehtsoft.Tools.IoC.Tools.TypeTools">
      <apidata name="TypeTools" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeTools.InjectProperties(System.Object,System.IServiceProvider)" />
        <element api="M:Gehtsoft.Tools.IoC.Tools.TypeTools.InjectFields(System.Object,System.IServiceProvider)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeTools.InjectFields(System.Object,System.IServiceProvider)">
      <apidata name="InjectFields" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="factory">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeTools" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.IoC.Tools.TypeTools.InjectProperties(System.Object,System.IServiceProvider)">
      <apidata name="InjectProperties" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="factory">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.IoC" module="Gehtsoft.Tools.IoC" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.IoC.Tools" />
        <type api="T:Gehtsoft.Tools.IoC.Tools.TypeTools" ref="true" />
      </containers>
    </api>
    <api id="N:Gehtsoft.Tools.Log">
      <apidata name="Gehtsoft.Tools.Log" group="namespace" />
      <elements>
        <element api="T:Gehtsoft.Tools.Log.ILoggingStream" />
        <element api="T:Gehtsoft.Tools.Log.LogLevel" />
        <element api="T:Gehtsoft.Tools.Log.ILogService" />
      </elements>
    </api>
    <api id="T:Gehtsoft.Tools.Log.ILoggingStream">
      <apidata name="ILoggingStream" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Gehtsoft.Tools.Log.RollingFile.QueuedLogStream" ref="true" />
      </implementors>
      <elements>
        <element api="M:Gehtsoft.Tools.Log.ILoggingStream.Log(System.String)" />
        <element api="M:Gehtsoft.Tools.Log.ILoggingStream.Log(System.String,System.Object[])" />
        <element api="M:Gehtsoft.Tools.Log.ILoggingStream.Log(System.Exception,System.String)" />
        <element api="P:Gehtsoft.Tools.Log.ILoggingStream.Level" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log" module="Gehtsoft.Tools.Log" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.ILoggingStream.Level">
      <apidata name="Level" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Level" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log" module="Gehtsoft.Tools.Log" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log" />
        <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.ILoggingStream.Log(System.Exception,System.String)">
      <apidata name="Log" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Log" module="Gehtsoft.Tools.Log" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log" />
        <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.ILoggingStream.Log(System.String)">
      <apidata name="Log" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Log" module="Gehtsoft.Tools.Log" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log" />
        <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.ILoggingStream.Log(System.String,System.Object[])">
      <apidata name="Log" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Log" module="Gehtsoft.Tools.Log" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log" />
        <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Log.ILogService">
      <apidata name="ILogService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <implementors>
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService" ref="true" />
        <type api="T:Gehtsoft.Tools.Log.Serilog.SerilogLogService" ref="true" />
      </implementors>
      <elements>
        <element api="M:Gehtsoft.Tools.Log.ILogService.Log(Gehtsoft.Tools.Log.LogLevel,System.String)" />
        <element api="M:Gehtsoft.Tools.Log.ILogService.Log(Gehtsoft.Tools.Log.LogLevel,System.String,System.Object[])" />
        <element api="M:Gehtsoft.Tools.Log.ILogService.Log(Gehtsoft.Tools.Log.LogLevel,System.Exception,System.String)" />
        <element api="P:Gehtsoft.Tools.Log.ILogService.Level" />
        <element api="P:Gehtsoft.Tools.Log.ILogService.Debug" />
        <element api="P:Gehtsoft.Tools.Log.ILogService.Info" />
        <element api="P:Gehtsoft.Tools.Log.ILogService.Warning" />
        <element api="P:Gehtsoft.Tools.Log.ILogService.Error" />
        <element api="P:Gehtsoft.Tools.Log.ILogService.Fatal" />
        <element api="M:System.IDisposable.Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.IDisposable" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log" module="Gehtsoft.Tools.Log" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.ILogService.Debug">
      <apidata name="Debug" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Debug" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log" module="Gehtsoft.Tools.Log" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log" />
        <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.ILogService.Error">
      <apidata name="Error" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Error" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log" module="Gehtsoft.Tools.Log" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log" />
        <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.ILogService.Fatal">
      <apidata name="Fatal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Fatal" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log" module="Gehtsoft.Tools.Log" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log" />
        <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.ILogService.Info">
      <apidata name="Info" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Info" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log" module="Gehtsoft.Tools.Log" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log" />
        <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.ILogService.Level">
      <apidata name="Level" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Level" />
      <setter name="set_Level" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log" module="Gehtsoft.Tools.Log" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log" />
        <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.ILogService.Log(Gehtsoft.Tools.Log.LogLevel,System.Exception,System.String)">
      <apidata name="Log" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="level">
          <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Log" module="Gehtsoft.Tools.Log" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log" />
        <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.ILogService.Log(Gehtsoft.Tools.Log.LogLevel,System.String)">
      <apidata name="Log" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="level">
          <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Log" module="Gehtsoft.Tools.Log" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log" />
        <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.ILogService.Log(Gehtsoft.Tools.Log.LogLevel,System.String,System.Object[])">
      <apidata name="Log" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="level">
          <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
        </parameter>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Log" module="Gehtsoft.Tools.Log" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log" />
        <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.ILogService.Warning">
      <apidata name="Warning" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Warning" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log" module="Gehtsoft.Tools.Log" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log" />
        <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Log.LogLevel">
      <apidata name="LogLevel" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:Gehtsoft.Tools.Log.LogLevel.Off" />
        <element api="F:Gehtsoft.Tools.Log.LogLevel.Debug" />
        <element api="F:Gehtsoft.Tools.Log.LogLevel.Info" />
        <element api="F:Gehtsoft.Tools.Log.LogLevel.Warning" />
        <element api="F:Gehtsoft.Tools.Log.LogLevel.Error" />
        <element api="F:Gehtsoft.Tools.Log.LogLevel.Fatal" />
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute``1(System.Enum)" source="extension">
          <apidata name="GetCustomAttribute" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T">
              <constrained>
                <type api="T:System.Attribute" ref="true" />
              </constrained>
            </template>
          </templates>
          <returns>
            <template name="T" index="0" api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute``1(System.Enum)" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.Description(System.Enum)" source="extension">
          <apidata name="Description" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute(System.Enum,System.Type)" source="extension">
          <apidata name="GetCustomAttribute" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributeType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Attribute" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log" module="Gehtsoft.Tools.Log" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Log.LogLevel.Debug">
      <apidata name="Debug" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gehtsoft.Tools.Log" module="Gehtsoft.Tools.Log" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log" />
        <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Log.LogLevel.Error">
      <apidata name="Error" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Gehtsoft.Tools.Log" module="Gehtsoft.Tools.Log" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log" />
        <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Log.LogLevel.Fatal">
      <apidata name="Fatal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Gehtsoft.Tools.Log" module="Gehtsoft.Tools.Log" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log" />
        <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Log.LogLevel.Info">
      <apidata name="Info" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gehtsoft.Tools.Log" module="Gehtsoft.Tools.Log" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log" />
        <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Log.LogLevel.Off">
      <apidata name="Off" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
      </returns>
      <value>100</value>
      <containers>
        <library assembly="Gehtsoft.Tools.Log" module="Gehtsoft.Tools.Log" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log" />
        <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Log.LogLevel.Warning">
      <apidata name="Warning" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Gehtsoft.Tools.Log" module="Gehtsoft.Tools.Log" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log" />
        <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
      </containers>
    </api>
    <api id="N:Gehtsoft.Tools.Log.RollingFile">
      <apidata name="Gehtsoft.Tools.Log.RollingFile" group="namespace" />
      <elements>
        <element api="T:Gehtsoft.Tools.Log.RollingFile.QueuedLogStream" />
        <element api="T:Gehtsoft.Tools.Log.RollingFile.LogMessage" />
        <element api="T:Gehtsoft.Tools.Log.RollingFile.MessageQueue" />
        <element api="T:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter" />
        <element api="T:Gehtsoft.Tools.Log.RollingFile.RollingPeriod" />
        <element api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService" />
        <element api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter" />
      </elements>
    </api>
    <api id="T:Gehtsoft.Tools.Log.RollingFile.LogMessage">
      <apidata name="LogMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.Log.RollingFile.LogMessage.ToString" />
        <element api="M:Gehtsoft.Tools.Log.RollingFile.LogMessage.#ctor" />
        <element api="P:Gehtsoft.Tools.Log.RollingFile.LogMessage.Level" />
        <element api="P:Gehtsoft.Tools.Log.RollingFile.LogMessage.Time" />
        <element api="P:Gehtsoft.Tools.Log.RollingFile.LogMessage.IsFormat" />
        <element api="P:Gehtsoft.Tools.Log.RollingFile.LogMessage.Text" />
        <element api="P:Gehtsoft.Tools.Log.RollingFile.LogMessage.Args" />
        <element api="P:Gehtsoft.Tools.Log.RollingFile.LogMessage.Exception" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.LogMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.LogMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.RollingFile.LogMessage.Args">
      <apidata name="Args" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Args" />
      <setter name="set_Args" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.LogMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.RollingFile.LogMessage.Exception">
      <apidata name="Exception" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Exception" />
      <setter name="set_Exception" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.LogMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.RollingFile.LogMessage.IsFormat">
      <apidata name="IsFormat" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsFormat" />
      <setter name="set_IsFormat" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.LogMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.RollingFile.LogMessage.Level">
      <apidata name="Level" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Level" />
      <setter name="set_Level" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.LogMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.RollingFile.LogMessage.Text">
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Text" />
      <setter name="set_Text" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.LogMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.RollingFile.LogMessage.Time">
      <apidata name="Time" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Time" />
      <setter name="set_Time" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.LogMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.LogMessage.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.LogMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Log.RollingFile.MessageQueue">
      <apidata name="MessageQueue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.Log.RollingFile.MessageQueue.#ctor" />
        <element api="M:Gehtsoft.Tools.Log.RollingFile.MessageQueue.Enqueue(Gehtsoft.Tools.Log.RollingFile.LogMessage)" />
        <element api="M:Gehtsoft.Tools.Log.RollingFile.MessageQueue.Dequeue" />
        <element api="P:Gehtsoft.Tools.Log.RollingFile.MessageQueue.Mutex" />
        <element api="P:Gehtsoft.Tools.Log.RollingFile.MessageQueue.IsEmpty" />
        <element api="P:Gehtsoft.Tools.Log.RollingFile.MessageQueue.Top" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.MessageQueue.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.MessageQueue" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.MessageQueue.Dequeue">
      <apidata name="Dequeue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.RollingFile.LogMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.MessageQueue" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.MessageQueue.Enqueue(Gehtsoft.Tools.Log.RollingFile.LogMessage)">
      <apidata name="Enqueue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:Gehtsoft.Tools.Log.RollingFile.LogMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.MessageQueue" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.RollingFile.MessageQueue.IsEmpty">
      <apidata name="IsEmpty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsEmpty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.MessageQueue" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.RollingFile.MessageQueue.Mutex">
      <apidata name="Mutex" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Mutex" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.MessageQueue" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.RollingFile.MessageQueue.Top">
      <apidata name="Top" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Top" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.RollingFile.LogMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.MessageQueue" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter">
      <apidata name="MessageQueueWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter.#ctor(Gehtsoft.Tools.Log.LogLevel,System.String,System.String,System.String,Gehtsoft.Tools.Log.RollingFile.RollingPeriod,Gehtsoft.Tools.Log.RollingFile.MessageQueue)" />
        <element api="M:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter.Flush(System.Int32,System.TimeSpan)" />
        <element api="M:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter.Flush" />
        <element api="M:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter.Dispose" />
        <element api="P:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter.WriteTimeout" />
        <element api="P:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter.Level" />
        <element api="P:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter.IsAlive" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter.#ctor(Gehtsoft.Tools.Log.LogLevel,System.String,System.String,System.String,Gehtsoft.Tools.Log.RollingFile.RollingPeriod,Gehtsoft.Tools.Log.RollingFile.MessageQueue)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="level">
          <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="extension">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="period">
          <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingPeriod" ref="false" />
        </parameter>
        <parameter name="queue">
          <type api="T:Gehtsoft.Tools.Log.RollingFile.MessageQueue" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter.Flush">
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter.Flush(System.Int32,System.TimeSpan)">
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="maxAttempt">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="timeOut">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter.IsAlive">
      <apidata name="IsAlive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsAlive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter.Level">
      <apidata name="Level" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Level" />
      <setter name="set_Level" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter.WriteTimeout">
      <apidata name="WriteTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WriteTimeout" />
      <setter name="set_WriteTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.MessageQueueWriter" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Log.RollingFile.QueuedLogStream">
      <apidata name="QueuedLogStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Tools.Log.RollingFile.QueuedLogStream.Log(System.String)" />
        <element api="M:Gehtsoft.Tools.Log.RollingFile.QueuedLogStream.Log(System.String,System.Object[])" />
        <element api="M:Gehtsoft.Tools.Log.RollingFile.QueuedLogStream.Log(System.Exception,System.String)" />
        <element api="P:Gehtsoft.Tools.Log.RollingFile.QueuedLogStream.Level" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.RollingFile.QueuedLogStream.Level">
      <apidata name="Level" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Level" />
      <setter name="set_Level" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Tools.Log.ILoggingStream.Level">
          <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.QueuedLogStream" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.QueuedLogStream.Log(System.Exception,System.String)">
      <apidata name="Log" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.Tools.Log.ILoggingStream.Log(System.Exception,System.String)">
          <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.QueuedLogStream" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.QueuedLogStream.Log(System.String)">
      <apidata name="Log" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.Tools.Log.ILoggingStream.Log(System.String)">
          <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.QueuedLogStream" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.QueuedLogStream.Log(System.String,System.Object[])">
      <apidata name="Log" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.Tools.Log.ILoggingStream.Log(System.String,System.Object[])">
          <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.QueuedLogStream" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService">
      <apidata name="RollingFileLogService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.IsOn(Gehtsoft.Tools.Log.LogLevel)" />
        <element api="M:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.#ctor(Gehtsoft.Tools.Log.LogLevel,System.String,System.String,System.String,Gehtsoft.Tools.Log.RollingFile.RollingPeriod)" />
        <element api="M:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.InternalLog(Gehtsoft.Tools.Log.LogLevel,System.String)" />
        <element api="M:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.InternalLog(Gehtsoft.Tools.Log.LogLevel,System.String,System.Object[])" />
        <element api="M:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.Log(Gehtsoft.Tools.Log.LogLevel,System.String)" />
        <element api="M:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.Log(Gehtsoft.Tools.Log.LogLevel,System.String,System.Object[])" />
        <element api="M:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.Log(Gehtsoft.Tools.Log.LogLevel,System.Exception,System.String)" />
        <element api="M:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.Dispose" />
        <element api="M:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.Flush" />
        <element api="P:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.Level" />
        <element api="P:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.Debug" />
        <element api="P:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.Info" />
        <element api="P:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.Warning" />
        <element api="P:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.Error" />
        <element api="P:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.Fatal" />
        <element api="P:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.WriteTimeout" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.#ctor(Gehtsoft.Tools.Log.LogLevel,System.String,System.String,System.String,Gehtsoft.Tools.Log.RollingFile.RollingPeriod)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="level">
          <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
          <argument>
            <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
            <enumValue>
              <field name="Off" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>./log/</value>
          </argument>
        </parameter>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>log</value>
          </argument>
        </parameter>
        <parameter name="extension">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>.txt</value>
          </argument>
        </parameter>
        <parameter name="period">
          <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingPeriod" ref="false" />
          <argument>
            <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingPeriod" ref="false" />
            <enumValue>
              <field name="Day" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.Debug">
      <apidata name="Debug" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Debug" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Tools.Log.ILogService.Debug">
          <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.Error">
      <apidata name="Error" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Error" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Tools.Log.ILogService.Error">
          <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.Fatal">
      <apidata name="Fatal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Fatal" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Tools.Log.ILogService.Fatal">
          <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.Flush">
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.Info">
      <apidata name="Info" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Info" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Tools.Log.ILogService.Info">
          <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.InternalLog(Gehtsoft.Tools.Log.LogLevel,System.String)">
      <apidata name="InternalLog" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.InternalLog(Gehtsoft.Tools.Log.LogLevel,System.String,System.Object[])">
      <apidata name="InternalLog" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
        </parameter>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.IsOn(Gehtsoft.Tools.Log.LogLevel)">
      <apidata name="IsOn" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.Level">
      <apidata name="Level" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Level" />
      <setter name="set_Level" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Tools.Log.ILogService.Level">
          <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.Log(Gehtsoft.Tools.Log.LogLevel,System.Exception,System.String)">
      <apidata name="Log" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="level">
          <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.Tools.Log.ILogService.Log(Gehtsoft.Tools.Log.LogLevel,System.Exception,System.String)">
          <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.Log(Gehtsoft.Tools.Log.LogLevel,System.String)">
      <apidata name="Log" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="level">
          <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.Tools.Log.ILogService.Log(Gehtsoft.Tools.Log.LogLevel,System.String)">
          <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.Log(Gehtsoft.Tools.Log.LogLevel,System.String,System.Object[])">
      <apidata name="Log" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="level">
          <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
        </parameter>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.Tools.Log.ILogService.Log(Gehtsoft.Tools.Log.LogLevel,System.String,System.Object[])">
          <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.Warning">
      <apidata name="Warning" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Warning" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Tools.Log.ILogService.Warning">
          <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService.WriteTimeout">
      <apidata name="WriteTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WriteTimeout" />
      <setter name="set_WriteTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileLogService" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter">
      <apidata name="RollingFileWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter.#ctor(System.String,System.String,System.String,Gehtsoft.Tools.Log.RollingFile.RollingPeriod)" />
        <element api="M:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter.Write(System.String)" />
        <element api="M:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter.WriteFinished" />
        <element api="M:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter.Dispose" />
        <element api="M:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter.SetupWriter" />
        <element api="M:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter.IsNameChanged(System.DateTime)" />
        <element api="P:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter.DateTimeProvider" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter.#ctor(System.String,System.String,System.String,Gehtsoft.Tools.Log.RollingFile.RollingPeriod)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="extension">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="period">
          <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingPeriod" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter.DateTimeProvider">
      <apidata name="DateTimeProvider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DateTimeProvider" />
      <setter name="set_DateTimeProvider" />
      <returns>
        <type api="T:System.Func`1" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter.IsNameChanged(System.DateTime)">
      <apidata name="IsNameChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="time">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter.SetupWriter">
      <apidata name="SetupWriter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter.Write(System.String)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter.WriteFinished">
      <apidata name="WriteFinished" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingFileWriter" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Log.RollingFile.RollingPeriod">
      <apidata name="RollingPeriod" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:Gehtsoft.Tools.Log.RollingFile.RollingPeriod.None" />
        <element api="F:Gehtsoft.Tools.Log.RollingFile.RollingPeriod.Hour" />
        <element api="F:Gehtsoft.Tools.Log.RollingFile.RollingPeriod.Day" />
        <element api="F:Gehtsoft.Tools.Log.RollingFile.RollingPeriod.Week" />
        <element api="F:Gehtsoft.Tools.Log.RollingFile.RollingPeriod.Month" />
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute``1(System.Enum)" source="extension">
          <apidata name="GetCustomAttribute" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T">
              <constrained>
                <type api="T:System.Attribute" ref="true" />
              </constrained>
            </template>
          </templates>
          <returns>
            <template name="T" index="0" api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute``1(System.Enum)" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.Description(System.Enum)" source="extension">
          <apidata name="Description" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute(System.Enum,System.Type)" source="extension">
          <apidata name="GetCustomAttribute" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributeType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Attribute" ref="true" />
          </returns>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Log.RollingFile.RollingPeriod.Day">
      <apidata name="Day" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingPeriod" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingPeriod" ref="false" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Log.RollingFile.RollingPeriod.Hour">
      <apidata name="Hour" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingPeriod" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingPeriod" ref="false" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Log.RollingFile.RollingPeriod.Month">
      <apidata name="Month" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingPeriod" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingPeriod" ref="false" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Log.RollingFile.RollingPeriod.None">
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingPeriod" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingPeriod" ref="false" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Log.RollingFile.RollingPeriod.Week">
      <apidata name="Week" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingPeriod" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.RollingFile" module="Gehtsoft.Tools.Log.RollingFile" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.RollingFile" />
        <type api="T:Gehtsoft.Tools.Log.RollingFile.RollingPeriod" ref="false" />
      </containers>
    </api>
    <api id="N:Gehtsoft.Tools.Log.Serilog">
      <apidata name="Gehtsoft.Tools.Log.Serilog" group="namespace" />
      <elements>
        <element api="T:Gehtsoft.Tools.Log.Serilog.SerilogLogService" />
      </elements>
    </api>
    <api id="T:Gehtsoft.Tools.Log.Serilog.SerilogLogService">
      <apidata name="SerilogLogService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Tools.Log.Serilog.SerilogLogService.IsOn(Gehtsoft.Tools.Log.LogLevel)" />
        <element api="M:Gehtsoft.Tools.Log.Serilog.SerilogLogService.#ctor(Gehtsoft.Tools.Log.LogLevel,System.String,System.String,System.String)" />
        <element api="M:Gehtsoft.Tools.Log.Serilog.SerilogLogService.Log(Gehtsoft.Tools.Log.LogLevel,System.String)" />
        <element api="M:Gehtsoft.Tools.Log.Serilog.SerilogLogService.Log(Gehtsoft.Tools.Log.LogLevel,System.String,System.Object[])" />
        <element api="M:Gehtsoft.Tools.Log.Serilog.SerilogLogService.Log(Gehtsoft.Tools.Log.LogLevel,System.Exception,System.String)" />
        <element api="M:Gehtsoft.Tools.Log.Serilog.SerilogLogService.Dispose" />
        <element api="P:Gehtsoft.Tools.Log.Serilog.SerilogLogService.Level" />
        <element api="P:Gehtsoft.Tools.Log.Serilog.SerilogLogService.Debug" />
        <element api="P:Gehtsoft.Tools.Log.Serilog.SerilogLogService.Info" />
        <element api="P:Gehtsoft.Tools.Log.Serilog.SerilogLogService.Warning" />
        <element api="P:Gehtsoft.Tools.Log.Serilog.SerilogLogService.Error" />
        <element api="P:Gehtsoft.Tools.Log.Serilog.SerilogLogService.Fatal" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.Serilog" module="Gehtsoft.Tools.Log.Serilog" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.Serilog" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.Serilog.SerilogLogService.#ctor(Gehtsoft.Tools.Log.LogLevel,System.String,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="level">
          <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
          <argument>
            <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
            <enumValue>
              <field name="Off" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>./log/</value>
          </argument>
        </parameter>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>log</value>
          </argument>
        </parameter>
        <parameter name="extension">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>.txt</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.Serilog" module="Gehtsoft.Tools.Log.Serilog" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.Serilog" />
        <type api="T:Gehtsoft.Tools.Log.Serilog.SerilogLogService" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.Serilog.SerilogLogService.Debug">
      <apidata name="Debug" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Debug" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Tools.Log.ILogService.Debug">
          <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.Serilog" module="Gehtsoft.Tools.Log.Serilog" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.Serilog" />
        <type api="T:Gehtsoft.Tools.Log.Serilog.SerilogLogService" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.Serilog.SerilogLogService.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.Serilog" module="Gehtsoft.Tools.Log.Serilog" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.Serilog" />
        <type api="T:Gehtsoft.Tools.Log.Serilog.SerilogLogService" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.Serilog.SerilogLogService.Error">
      <apidata name="Error" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Error" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Tools.Log.ILogService.Error">
          <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.Serilog" module="Gehtsoft.Tools.Log.Serilog" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.Serilog" />
        <type api="T:Gehtsoft.Tools.Log.Serilog.SerilogLogService" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.Serilog.SerilogLogService.Fatal">
      <apidata name="Fatal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Fatal" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Tools.Log.ILogService.Fatal">
          <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.Serilog" module="Gehtsoft.Tools.Log.Serilog" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.Serilog" />
        <type api="T:Gehtsoft.Tools.Log.Serilog.SerilogLogService" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.Serilog.SerilogLogService.Info">
      <apidata name="Info" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Info" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Tools.Log.ILogService.Info">
          <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.Serilog" module="Gehtsoft.Tools.Log.Serilog" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.Serilog" />
        <type api="T:Gehtsoft.Tools.Log.Serilog.SerilogLogService" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.Serilog.SerilogLogService.IsOn(Gehtsoft.Tools.Log.LogLevel)">
      <apidata name="IsOn" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.Serilog" module="Gehtsoft.Tools.Log.Serilog" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.Serilog" />
        <type api="T:Gehtsoft.Tools.Log.Serilog.SerilogLogService" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.Serilog.SerilogLogService.Level">
      <apidata name="Level" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Level" />
      <setter name="set_Level" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Tools.Log.ILogService.Level">
          <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.Serilog" module="Gehtsoft.Tools.Log.Serilog" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.Serilog" />
        <type api="T:Gehtsoft.Tools.Log.Serilog.SerilogLogService" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.Serilog.SerilogLogService.Log(Gehtsoft.Tools.Log.LogLevel,System.Exception,System.String)">
      <apidata name="Log" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="level">
          <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.Tools.Log.ILogService.Log(Gehtsoft.Tools.Log.LogLevel,System.Exception,System.String)">
          <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.Serilog" module="Gehtsoft.Tools.Log.Serilog" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.Serilog" />
        <type api="T:Gehtsoft.Tools.Log.Serilog.SerilogLogService" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.Serilog.SerilogLogService.Log(Gehtsoft.Tools.Log.LogLevel,System.String)">
      <apidata name="Log" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="level">
          <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.Tools.Log.ILogService.Log(Gehtsoft.Tools.Log.LogLevel,System.String)">
          <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.Serilog" module="Gehtsoft.Tools.Log.Serilog" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.Serilog" />
        <type api="T:Gehtsoft.Tools.Log.Serilog.SerilogLogService" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Log.Serilog.SerilogLogService.Log(Gehtsoft.Tools.Log.LogLevel,System.String,System.Object[])">
      <apidata name="Log" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="level">
          <type api="T:Gehtsoft.Tools.Log.LogLevel" ref="false" />
        </parameter>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.Tools.Log.ILogService.Log(Gehtsoft.Tools.Log.LogLevel,System.String,System.Object[])">
          <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.Serilog" module="Gehtsoft.Tools.Log.Serilog" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.Serilog" />
        <type api="T:Gehtsoft.Tools.Log.Serilog.SerilogLogService" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Log.Serilog.SerilogLogService.Warning">
      <apidata name="Warning" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Warning" />
      <returns>
        <type api="T:Gehtsoft.Tools.Log.ILoggingStream" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Tools.Log.ILogService.Warning">
          <type api="T:Gehtsoft.Tools.Log.ILogService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Log.Serilog" module="Gehtsoft.Tools.Log.Serilog" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Log.Serilog" />
        <type api="T:Gehtsoft.Tools.Log.Serilog.SerilogLogService" ref="true" />
      </containers>
    </api>
    <api id="N:Gehtsoft.Tools.ObjectPool">
      <apidata name="Gehtsoft.Tools.ObjectPool" group="namespace" />
      <elements>
        <element api="T:Gehtsoft.Tools.ObjectPool.Borrowed`1" />
        <element api="T:Gehtsoft.Tools.ObjectPool.Borrowed`1.ReleaseDelegate" />
        <element api="T:Gehtsoft.Tools.ObjectPool.IObjectFactory`1" />
        <element api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" />
        <element api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1.ObjectHolder`1" />
        <element api="T:Gehtsoft.Tools.ObjectPool.ObjectPoolWithLifeSpan`1" />
      </elements>
    </api>
    <api id="T:Gehtsoft.Tools.ObjectPool.Borrowed`1">
      <apidata name="Borrowed" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Tools.ObjectPool.Borrowed`1.Finalize" />
        <element api="M:Gehtsoft.Tools.ObjectPool.Borrowed`1.Dispose" />
        <element api="M:Gehtsoft.Tools.ObjectPool.Borrowed`1.Dispose(System.Boolean)" />
        <element api="P:Gehtsoft.Tools.ObjectPool.Borrowed`1.Object" />
        <element api="E:Gehtsoft.Tools.ObjectPool.Borrowed`1.OnRelease" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ObjectPool.Borrowed`1.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.Borrowed`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ObjectPool.Borrowed`1.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.Borrowed`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ObjectPool.Borrowed`1.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.Borrowed`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.ObjectPool.Borrowed`1.Object">
      <apidata name="Object" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Object" />
      <returns>
        <template name="T" index="0" api="T:Gehtsoft.Tools.ObjectPool.Borrowed`1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.Borrowed`1" ref="true" />
      </containers>
    </api>
    <api id="E:Gehtsoft.Tools.ObjectPool.Borrowed`1.OnRelease">
      <apidata name="OnRelease" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_OnRelease" />
      <remover name="remove_OnRelease" />
      <eventhandler>
        <type api="T:Gehtsoft.Tools.ObjectPool.Borrowed`1.ReleaseDelegate" ref="true">
          <type api="T:Gehtsoft.Tools.ObjectPool.Borrowed`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.ObjectPool.Borrowed`1" />
            </specialization>
          </type>
        </type>
      </eventhandler>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.Borrowed`1" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.ObjectPool.Borrowed`1.ReleaseDelegate">
      <apidata name="ReleaseDelegate" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="objectT">
          <template name="T" index="0" api="T:Gehtsoft.Tools.ObjectPool.Borrowed`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.Borrowed`1" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.ObjectPool.IObjectFactory`1">
      <apidata name="IObjectFactory" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Gehtsoft.Tools.ObjectPool.IObjectFactory`1.Create" />
        <element api="M:Gehtsoft.Tools.ObjectPool.IObjectFactory`1.Dispose(`0)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ObjectPool.IObjectFactory`1.Create">
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <template name="T" index="0" api="T:Gehtsoft.Tools.ObjectPool.IObjectFactory`1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.IObjectFactory`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ObjectPool.IObjectFactory`1.Dispose(`0)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="objectT">
          <template name="T" index="0" api="T:Gehtsoft.Tools.ObjectPool.IObjectFactory`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.IObjectFactory`1" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1">
      <apidata name="ObjectPool" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPoolWithLifeSpan`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="F:Gehtsoft.Tools.ObjectPool.ObjectPool`1.mPool" />
        <element api="F:Gehtsoft.Tools.ObjectPool.ObjectPool`1.mFactory" />
        <element api="F:Gehtsoft.Tools.ObjectPool.ObjectPool`1.mMutex" />
        <element api="F:Gehtsoft.Tools.ObjectPool.ObjectPool`1.mReleased" />
        <element api="M:Gehtsoft.Tools.ObjectPool.ObjectPool`1.#ctor(Gehtsoft.Tools.ObjectPool.IObjectFactory{`0},System.Int32)" />
        <element api="M:Gehtsoft.Tools.ObjectPool.ObjectPool`1.Finalize" />
        <element api="M:Gehtsoft.Tools.ObjectPool.ObjectPool`1.Dispose" />
        <element api="M:Gehtsoft.Tools.ObjectPool.ObjectPool`1.Dispose(System.Boolean)" />
        <element api="M:Gehtsoft.Tools.ObjectPool.ObjectPool`1.Borrow(System.Int32)" />
        <element api="M:Gehtsoft.Tools.ObjectPool.ObjectPool`1.Borrow" />
        <element api="M:Gehtsoft.Tools.ObjectPool.ObjectPool`1.Borrow(System.TimeSpan)" />
        <element api="P:Gehtsoft.Tools.ObjectPool.ObjectPool`1.TotalObjects" />
        <element api="P:Gehtsoft.Tools.ObjectPool.ObjectPool`1.InUseObjects" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ObjectPool.ObjectPool`1.#ctor(Gehtsoft.Tools.ObjectPool.IObjectFactory{`0},System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="factory">
          <type api="T:Gehtsoft.Tools.ObjectPool.IObjectFactory`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="poolSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ObjectPool.ObjectPool`1.Borrow">
      <apidata name="Borrow" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Tools.ObjectPool.Borrowed`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ObjectPool.ObjectPool`1.Borrow(System.Int32)">
      <apidata name="Borrow" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="milliseconds">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Tools.ObjectPool.Borrowed`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ObjectPool.ObjectPool`1.Borrow(System.TimeSpan)">
      <apidata name="Borrow" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Tools.ObjectPool.Borrowed`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ObjectPool.ObjectPool`1.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ObjectPool.ObjectPool`1.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ObjectPool.ObjectPool`1.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.ObjectPool.ObjectPool`1.InUseObjects">
      <apidata name="InUseObjects" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InUseObjects" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.ObjectPool.ObjectPool`1.mFactory">
      <apidata name="mFactory" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gehtsoft.Tools.ObjectPool.IObjectFactory`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.ObjectPool.ObjectPool`1.mMutex">
      <apidata name="mMutex" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.ObjectPool.ObjectPool`1.mPool">
      <apidata name="mPool" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1.ObjectHolder`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" />
            </specialization>
            <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" />
              </specialization>
            </type>
          </type>
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.ObjectPool.ObjectPool`1.mReleased">
      <apidata name="mReleased" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.AutoResetEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.ObjectPool.ObjectPool`1.TotalObjects">
      <apidata name="TotalObjects" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TotalObjects" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1.ObjectHolder`1">
      <apidata name="ObjectHolder" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1">
          <constrained>
            <implements>
              <template name="T" index="0" api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" />
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:Gehtsoft.Tools.ObjectPool.ObjectPool`1.ObjectHolder`1.#ctor(`1)" />
        <element api="P:Gehtsoft.Tools.ObjectPool.ObjectPool`1.ObjectHolder`1.Object" />
        <element api="P:Gehtsoft.Tools.ObjectPool.ObjectPool`1.ObjectHolder`1.LastAccess" />
        <element api="P:Gehtsoft.Tools.ObjectPool.ObjectPool`1.ObjectHolder`1.InUse" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ObjectPool.ObjectPool`1.ObjectHolder`1.#ctor(`1)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="objectT">
          <template name="T1" index="1" api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1.ObjectHolder`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1.ObjectHolder`1" ref="true">
          <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.ObjectPool.ObjectPool`1.ObjectHolder`1.InUse">
      <apidata name="InUse" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InUse" />
      <setter name="set_InUse" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1.ObjectHolder`1" ref="true">
          <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.ObjectPool.ObjectPool`1.ObjectHolder`1.LastAccess">
      <apidata name="LastAccess" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LastAccess" />
      <setter name="set_LastAccess" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1.ObjectHolder`1" ref="true">
          <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.ObjectPool.ObjectPool`1.ObjectHolder`1.Object">
      <apidata name="Object" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Object" />
      <setter name="set_Object" />
      <returns>
        <template name="T1" index="1" api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1.ObjectHolder`1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1.ObjectHolder`1" ref="true">
          <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.ObjectPool.ObjectPoolWithLifeSpan`1">
      <apidata name="ObjectPoolWithLifeSpan" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPool`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.ObjectPool.ObjectPoolWithLifeSpan`1" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Gehtsoft.Tools.ObjectPool.ObjectPoolWithLifeSpan`1.#ctor(Gehtsoft.Tools.ObjectPool.IObjectFactory{`0},System.Int32,System.TimeSpan)" />
        <element api="F:Gehtsoft.Tools.ObjectPool.ObjectPool`1.mPool" />
        <element api="F:Gehtsoft.Tools.ObjectPool.ObjectPool`1.mFactory" />
        <element api="F:Gehtsoft.Tools.ObjectPool.ObjectPool`1.mMutex" />
        <element api="F:Gehtsoft.Tools.ObjectPool.ObjectPool`1.mReleased" />
        <element api="M:Gehtsoft.Tools.ObjectPool.ObjectPool`1.Finalize" />
        <element api="M:Gehtsoft.Tools.ObjectPool.ObjectPool`1.Dispose" />
        <element api="M:Gehtsoft.Tools.ObjectPool.ObjectPool`1.Dispose(System.Boolean)" />
        <element api="M:Gehtsoft.Tools.ObjectPool.ObjectPool`1.Borrow(System.Int32)" />
        <element api="M:Gehtsoft.Tools.ObjectPool.ObjectPool`1.Borrow" />
        <element api="M:Gehtsoft.Tools.ObjectPool.ObjectPool`1.Borrow(System.TimeSpan)" />
        <element api="P:Gehtsoft.Tools.ObjectPool.ObjectPool`1.TotalObjects" />
        <element api="P:Gehtsoft.Tools.ObjectPool.ObjectPool`1.InUseObjects" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.ObjectPool.ObjectPoolWithLifeSpan`1.#ctor(Gehtsoft.Tools.ObjectPool.IObjectFactory{`0},System.Int32,System.TimeSpan)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="factory">
          <type api="T:Gehtsoft.Tools.ObjectPool.IObjectFactory`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.ObjectPool.ObjectPoolWithLifeSpan`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="poolSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="lifespan">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.ObjectPool" module="Gehtsoft.Tools.ObjectPool" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.ObjectPool" />
        <type api="T:Gehtsoft.Tools.ObjectPool.ObjectPoolWithLifeSpan`1" ref="true" />
      </containers>
    </api>
    <api id="N:Gehtsoft.Tools.Structures">
      <apidata name="Gehtsoft.Tools.Structures" group="namespace" />
      <elements>
        <element api="T:Gehtsoft.Tools.Structures.Cache`1" />
        <element api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
        <element api="T:Gehtsoft.Tools.Structures.AutoExpandCircularBuffer`1" />
        <element api="T:Gehtsoft.Tools.Structures.DFA`2" />
        <element api="T:Gehtsoft.Tools.Structures.DFA`2.Transition" />
        <element api="T:Gehtsoft.Tools.Structures.FastDFA" />
        <element api="T:Gehtsoft.Tools.Structures.FastDFA.Transition" />
        <element api="T:Gehtsoft.Tools.Structures.FastDFA.TransitionTable" />
        <element api="T:Gehtsoft.Tools.Structures.FastDFA`2" />
        <element api="T:Gehtsoft.Tools.Structures.FastScrollList`1" />
        <element api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
        <element api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" />
      </elements>
    </api>
    <api id="T:Gehtsoft.Tools.Structures.AutoExpandCircularBuffer`1">
      <apidata name="AutoExpandCircularBuffer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.AutoExpandCircularBuffer`1" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Gehtsoft.Tools.Structures.AutoExpandCircularBuffer`1.#ctor(System.Int32,System.Int32)" />
        <element api="M:Gehtsoft.Tools.Structures.AutoExpandCircularBuffer`1.Add(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.AutoExpandCircularBuffer`1.Insert(System.Int32,`0)" />
        <element api="F:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.mBuffer" />
        <element api="F:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.mCapacity" />
        <element api="F:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.mHead" />
        <element api="F:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.mSize" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.ConvertIndex(System.Int32)" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.GetEnumerator" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Clear" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Contains(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.CopyTo(`0[],System.Int32)" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Remove(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.IndexOf(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.RemoveAt(System.Int32)" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Dequeue" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Enqueue(`0)" />
        <element api="P:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Count" />
        <element api="P:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.IsReadOnly" />
        <element api="P:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Item(System.Int32)" />
        <element api="P:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.First" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.AutoExpandCircularBuffer`1.#ctor(System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="initialCapacity">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1024</value>
          </argument>
        </parameter>
        <parameter name="growFactor">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>20</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.AutoExpandCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.AutoExpandCircularBuffer`1.Add(`0)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Add(`0)">
          <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.AutoExpandCircularBuffer`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="item">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.AutoExpandCircularBuffer`1" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.AutoExpandCircularBuffer`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.AutoExpandCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.AutoExpandCircularBuffer`1.Insert(System.Int32,`0)">
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Insert(System.Int32,`0)">
          <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.AutoExpandCircularBuffer`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.AutoExpandCircularBuffer`1" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.AutoExpandCircularBuffer`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.AutoExpandCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Structures.Cache`1">
      <apidata name="Cache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="F:Gehtsoft.Tools.Structures.Cache`1.mFactory" />
        <element api="F:Gehtsoft.Tools.Structures.Cache`1.mCache" />
        <element api="F:Gehtsoft.Tools.Structures.Cache`1.mCacheMutex" />
        <element api="M:Gehtsoft.Tools.Structures.Cache`1.#ctor(System.TimeSpan)" />
        <element api="M:Gehtsoft.Tools.Structures.Cache`1.#ctor(System.Func`2,System.Boolean)" />
        <element api="M:Gehtsoft.Tools.Structures.Cache`1.CreateInstance(System.Object[])" />
        <element api="M:Gehtsoft.Tools.Structures.Cache`1.Reset" />
        <element api="M:Gehtsoft.Tools.Structures.Cache`1.ResetFor(System.Object[])" />
        <element api="M:Gehtsoft.Tools.Structures.Cache`1.Get(System.Object[])" />
        <element api="M:Gehtsoft.Tools.Structures.Cache`1.Set(`0,System.Object[])" />
        <element api="M:Gehtsoft.Tools.Structures.Cache`1.GetEvenIfExpired(System.Object[])" />
        <element api="M:Gehtsoft.Tools.Structures.Cache`1.EnableAutoCleanup(System.Nullable{System.TimeSpan})" />
        <element api="M:Gehtsoft.Tools.Structures.Cache`1.CleanupHandler" />
        <element api="P:Gehtsoft.Tools.Structures.Cache`1.Item(System.Object[])" />
        <element api="P:Gehtsoft.Tools.Structures.Cache`1.SyncRoot" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Cache`1.#ctor(System.Func`2,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="factory">
          <type api="T:System.Func`2" ref="true" />
        </parameter>
        <parameter name="lifeSpan">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.Cache`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Cache`1.#ctor(System.TimeSpan)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lifeSpan">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.Cache`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Cache`1.CleanupHandler">
      <apidata name="CleanupHandler" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.Cache`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Cache`1.CreateInstance(System.Object[])">
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Cache`1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.Cache`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Cache`1.EnableAutoCleanup(System.Nullable{System.TimeSpan})">
      <apidata name="EnableAutoCleanup" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cleanupInterval">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.TimeSpan" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.Cache`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Cache`1.Get(System.Object[])">
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Cache`1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.Cache`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Cache`1.GetEvenIfExpired(System.Object[])">
      <apidata name="GetEvenIfExpired" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Cache`1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.Cache`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.Cache`1.Item(System.Object[])">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Cache`1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.Cache`1" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Structures.Cache`1.mCache">
      <apidata name="mCache" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Concurrent.ConcurrentDictionary`2" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.Cache`1" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Structures.Cache`1.mCacheMutex">
      <apidata name="mCacheMutex" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.Cache`1" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Structures.Cache`1.mFactory">
      <apidata name="mFactory" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Func`2" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.Cache`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Cache`1.Reset">
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.Cache`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Cache`1.ResetFor(System.Object[])">
      <apidata name="ResetFor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.Cache`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Cache`1.Set(`0,System.Object[])">
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Cache`1" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.Cache`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.Cache`1.SyncRoot">
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.Cache`1" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Structures.DFA`2">
      <apidata name="DFA" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TSignal" />
        <template name="TState" />
      </templates>
      <elements>
        <element api="M:Gehtsoft.Tools.Structures.DFA`2.AddTransition(Gehtsoft.Tools.Structures.DFA{`0,`1}.Transition)" />
        <element api="M:Gehtsoft.Tools.Structures.DFA`2.Reset" />
        <element api="M:Gehtsoft.Tools.Structures.DFA`2.Signal(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.DFA`2.#ctor" />
        <element api="P:Gehtsoft.Tools.Structures.DFA`2.InitialState" />
        <element api="P:Gehtsoft.Tools.Structures.DFA`2.CurrentState" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.DFA`2.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.DFA`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.DFA`2.AddTransition(Gehtsoft.Tools.Structures.DFA{`0,`1}.Transition)">
      <apidata name="AddTransition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="transition">
          <type api="T:Gehtsoft.Tools.Structures.DFA`2.Transition" ref="true">
            <type api="T:Gehtsoft.Tools.Structures.DFA`2" ref="true">
              <specialization>
                <template name="TSignal" index="0" api="T:Gehtsoft.Tools.Structures.DFA`2" />
                <template name="TState" index="1" api="T:Gehtsoft.Tools.Structures.DFA`2" />
              </specialization>
            </type>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.DFA`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.DFA`2.CurrentState">
      <apidata name="CurrentState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CurrentState" />
      <setter name="set_CurrentState" />
      <returns>
        <template name="TState" index="1" api="T:Gehtsoft.Tools.Structures.DFA`2" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.DFA`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.DFA`2.InitialState">
      <apidata name="InitialState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InitialState" />
      <setter name="set_InitialState" />
      <returns>
        <template name="TState" index="1" api="T:Gehtsoft.Tools.Structures.DFA`2" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.DFA`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.DFA`2.Reset">
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.DFA`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.DFA`2.Signal(`0)">
      <apidata name="Signal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="signal">
          <template name="TSignal" index="0" api="T:Gehtsoft.Tools.Structures.DFA`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.DFA`2" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Structures.DFA`2.Transition">
      <apidata name="Transition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.Structures.DFA`2.Transition.#ctor" />
        <element api="P:Gehtsoft.Tools.Structures.DFA`2.Transition.From" />
        <element api="P:Gehtsoft.Tools.Structures.DFA`2.Transition.Signal" />
        <element api="P:Gehtsoft.Tools.Structures.DFA`2.Transition.To" />
        <element api="P:Gehtsoft.Tools.Structures.DFA`2.Transition.Action" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.DFA`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.DFA`2.Transition.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.DFA`2.Transition" ref="true">
          <type api="T:Gehtsoft.Tools.Structures.DFA`2" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.DFA`2.Transition.Action">
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Action" />
      <setter name="set_Action" />
      <returns>
        <type api="T:System.Action" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.DFA`2.Transition" ref="true">
          <type api="T:Gehtsoft.Tools.Structures.DFA`2" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.DFA`2.Transition.From">
      <apidata name="From" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_From" />
      <setter name="set_From" />
      <returns>
        <template name="TState" index="1" api="T:Gehtsoft.Tools.Structures.DFA`2" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.DFA`2.Transition" ref="true">
          <type api="T:Gehtsoft.Tools.Structures.DFA`2" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.DFA`2.Transition.Signal">
      <apidata name="Signal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Signal" />
      <setter name="set_Signal" />
      <returns>
        <template name="TSignal" index="0" api="T:Gehtsoft.Tools.Structures.DFA`2" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.DFA`2.Transition" ref="true">
          <type api="T:Gehtsoft.Tools.Structures.DFA`2" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.DFA`2.Transition.To">
      <apidata name="To" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_To" />
      <setter name="set_To" />
      <returns>
        <template name="TState" index="1" api="T:Gehtsoft.Tools.Structures.DFA`2" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.DFA`2.Transition" ref="true">
          <type api="T:Gehtsoft.Tools.Structures.DFA`2" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Structures.FastDFA">
      <apidata name="FastDFA" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Gehtsoft.Tools.Structures.FastDFA`2" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="F:Gehtsoft.Tools.Structures.FastDFA.mMaxSignal" />
        <element api="F:Gehtsoft.Tools.Structures.FastDFA.mMaxState" />
        <element api="M:Gehtsoft.Tools.Structures.FastDFA.#ctor" />
        <element api="M:Gehtsoft.Tools.Structures.FastDFA.#ctor(System.Int32,System.Int32)" />
        <element api="M:Gehtsoft.Tools.Structures.FastDFA.Initialize(System.Int32,System.Int32)" />
        <element api="M:Gehtsoft.Tools.Structures.FastDFA.AddTransition(System.Int32,System.Int32,System.Int32,System.Action)" />
        <element api="M:Gehtsoft.Tools.Structures.FastDFA.Reset" />
        <element api="M:Gehtsoft.Tools.Structures.FastDFA.Signal(System.Int32)" />
        <element api="P:Gehtsoft.Tools.Structures.FastDFA.InitialState" />
        <element api="P:Gehtsoft.Tools.Structures.FastDFA.CurrentState" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FastDFA.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastDFA" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FastDFA.#ctor(System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="maxState">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxSignal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastDFA" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FastDFA.AddTransition(System.Int32,System.Int32,System.Int32,System.Action)">
      <apidata name="AddTransition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="from">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="signal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="action">
          <type api="T:System.Action" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastDFA" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.FastDFA.CurrentState">
      <apidata name="CurrentState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CurrentState" />
      <setter name="set_CurrentState" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastDFA" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FastDFA.Initialize(System.Int32,System.Int32)">
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="maxState">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxSignal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastDFA" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.FastDFA.InitialState">
      <apidata name="InitialState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InitialState" />
      <setter name="set_InitialState" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastDFA" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Structures.FastDFA.mMaxSignal">
      <apidata name="mMaxSignal" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastDFA" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Structures.FastDFA.mMaxState">
      <apidata name="mMaxState" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastDFA" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FastDFA.Reset">
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastDFA" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FastDFA.Signal(System.Int32)">
      <apidata name="Signal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="signal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastDFA" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Structures.FastDFA`2">
      <apidata name="FastDFA" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Tools.Structures.FastDFA" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Gehtsoft.Tools.CommandLine.SingleLineParser" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TState" />
        <template name="TSignal" />
      </templates>
      <elements>
        <element api="M:Gehtsoft.Tools.Structures.FastDFA`2.#ctor" />
        <element api="M:Gehtsoft.Tools.Structures.FastDFA`2.AddTransition(`0,`0,`1,System.Action)" />
        <element api="M:Gehtsoft.Tools.Structures.FastDFA.AddTransition(System.Int32,System.Int32,System.Int32,System.Action)" />
        <element api="M:Gehtsoft.Tools.Structures.FastDFA`2.Signal(`1)" />
        <element api="M:Gehtsoft.Tools.Structures.FastDFA.Signal(System.Int32)" />
        <element api="P:Gehtsoft.Tools.Structures.FastDFA`2.CurrentState" />
        <element api="P:Gehtsoft.Tools.Structures.FastDFA`2.InitialState" />
        <element api="F:Gehtsoft.Tools.Structures.FastDFA.mMaxSignal" />
        <element api="F:Gehtsoft.Tools.Structures.FastDFA.mMaxState" />
        <element api="M:Gehtsoft.Tools.Structures.FastDFA.Initialize(System.Int32,System.Int32)" />
        <element api="M:Gehtsoft.Tools.Structures.FastDFA.Reset" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FastDFA`2.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastDFA`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FastDFA`2.AddTransition(`0,`0,`1,System.Action)">
      <apidata name="AddTransition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="from">
          <template name="TState" index="0" api="T:Gehtsoft.Tools.Structures.FastDFA`2" />
        </parameter>
        <parameter name="to">
          <template name="TState" index="0" api="T:Gehtsoft.Tools.Structures.FastDFA`2" />
        </parameter>
        <parameter name="signal">
          <template name="TSignal" index="1" api="T:Gehtsoft.Tools.Structures.FastDFA`2" />
        </parameter>
        <parameter name="action">
          <type api="T:System.Action" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastDFA`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.FastDFA`2.CurrentState">
      <apidata name="CurrentState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CurrentState" />
      <setter name="set_CurrentState" />
      <returns>
        <template name="TState" index="0" api="T:Gehtsoft.Tools.Structures.FastDFA`2" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastDFA`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.FastDFA`2.InitialState">
      <apidata name="InitialState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InitialState" />
      <setter name="set_InitialState" />
      <returns>
        <template name="TState" index="0" api="T:Gehtsoft.Tools.Structures.FastDFA`2" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastDFA`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FastDFA`2.Signal(`1)">
      <apidata name="Signal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="signal">
          <template name="TSignal" index="1" api="T:Gehtsoft.Tools.Structures.FastDFA`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastDFA`2" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Structures.FastDFA.Transition">
      <apidata name="Transition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.Structures.FastDFA.Transition.#ctor" />
        <element api="P:Gehtsoft.Tools.Structures.FastDFA.Transition.To" />
        <element api="P:Gehtsoft.Tools.Structures.FastDFA.Transition.Action" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastDFA" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FastDFA.Transition.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastDFA.Transition" ref="true">
          <type api="T:Gehtsoft.Tools.Structures.FastDFA" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.FastDFA.Transition.Action">
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Action" />
      <setter name="set_Action" />
      <returns>
        <type api="T:System.Action" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastDFA.Transition" ref="true">
          <type api="T:Gehtsoft.Tools.Structures.FastDFA" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.FastDFA.Transition.To">
      <apidata name="To" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_To" />
      <setter name="set_To" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastDFA.Transition" ref="true">
          <type api="T:Gehtsoft.Tools.Structures.FastDFA" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Structures.FastDFA.TransitionTable">
      <apidata name="TransitionTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.Structures.FastDFA.TransitionTable.#ctor" />
        <element api="P:Gehtsoft.Tools.Structures.FastDFA.TransitionTable.Transitions" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastDFA" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FastDFA.TransitionTable.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastDFA.TransitionTable" ref="true">
          <type api="T:Gehtsoft.Tools.Structures.FastDFA" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.FastDFA.TransitionTable.Transitions">
      <apidata name="Transitions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Transitions" />
      <setter name="set_Transitions" />
      <returns>
        <arrayOf rank="1">
          <type api="T:Gehtsoft.Tools.Structures.FastDFA.Transition" ref="true">
            <type api="T:Gehtsoft.Tools.Structures.FastDFA" ref="true" />
          </type>
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastDFA.TransitionTable" ref="true">
          <type api="T:Gehtsoft.Tools.Structures.FastDFA" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Structures.FastScrollList`1">
      <apidata name="FastScrollList" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IReadOnlyCollection`1" ref="true" />
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FastScrollList`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Tools.Structures.FastScrollList`1.#ctor(System.Int32)" />
        <element api="M:Gehtsoft.Tools.Structures.FastScrollList`1.AddToEnd(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.FastScrollList`1.InsertAtTop(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.FastScrollList`1.GetAt(System.Int32)" />
        <element api="M:Gehtsoft.Tools.Structures.FastScrollList`1.SetAt(System.Int32,`0)" />
        <element api="M:Gehtsoft.Tools.Structures.FastScrollList`1.RemoveFromTop(System.Int32)" />
        <element api="M:Gehtsoft.Tools.Structures.FastScrollList`1.Clear" />
        <element api="M:Gehtsoft.Tools.Structures.FastScrollList`1.GetEnumerator" />
        <element api="M:Gehtsoft.Tools.Structures.FastScrollList`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="P:Gehtsoft.Tools.Structures.FastScrollList`1.Count" />
        <element api="P:Gehtsoft.Tools.Structures.FastScrollList`1.Limit" />
        <element api="P:Gehtsoft.Tools.Structures.FastScrollList`1.IsFull" />
        <element api="P:Gehtsoft.Tools.Structures.FastScrollList`1.Item(System.Int32)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumerationUtils.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" source="extension">
          <apidata name="ForEach" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FastScrollList`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Action`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FastScrollList`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumerationUtils" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FastScrollList`1.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="limit">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1048576</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastScrollList`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FastScrollList`1.AddToEnd(`0)">
      <apidata name="AddToEnd" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FastScrollList`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastScrollList`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FastScrollList`1.Clear">
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastScrollList`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.FastScrollList`1.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastScrollList`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FastScrollList`1.GetAt(System.Int32)">
      <apidata name="GetAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FastScrollList`1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastScrollList`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FastScrollList`1.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FastScrollList`1" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FastScrollList`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastScrollList`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FastScrollList`1.InsertAtTop(`0)">
      <apidata name="InsertAtTop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FastScrollList`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastScrollList`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.FastScrollList`1.IsFull">
      <apidata name="IsFull" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsFull" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastScrollList`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.FastScrollList`1.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FastScrollList`1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastScrollList`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.FastScrollList`1.Limit">
      <apidata name="Limit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Limit" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastScrollList`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FastScrollList`1.RemoveFromTop(System.Int32)">
      <apidata name="RemoveFromTop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastScrollList`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FastScrollList`1.SetAt(System.Int32,`0)">
      <apidata name="SetAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FastScrollList`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastScrollList`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FastScrollList`1.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FastScrollList`1" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Structures.FibonacciHeap`2">
      <apidata name="FibonacciHeap" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TKey">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.IComparable`1" ref="true">
                <specialization>
                  <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
              <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
                <specialization>
                  <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                  <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                </specialization>
              </type>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
              <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
                <specialization>
                  <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                  <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                </specialization>
              </type>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.Add(`0,`1)" />
        <element api="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.Add(Gehtsoft.Tools.Structures.FibonacciHeap{`0,`1}.Node)" />
        <element api="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.Union(Gehtsoft.Tools.Structures.FibonacciHeap{`0,`1})" />
        <element api="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.ExtractMin" />
        <element api="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.DecreaseKey(Gehtsoft.Tools.Structures.FibonacciHeap{`0,`1}.Node,System.Boolean,`0)" />
        <element api="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.Remove(Gehtsoft.Tools.Structures.FibonacciHeap{`0,`1}.Node)" />
        <element api="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.Clear" />
        <element api="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.GetEnumerator" />
        <element api="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.Contains(Gehtsoft.Tools.Structures.FibonacciHeap{`0,`1}.Node)" />
        <element api="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.CopyTo(Gehtsoft.Tools.Structures.FibonacciHeap{`0,`1}.Node[],System.Int32)" />
        <element api="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.#ctor" />
        <element api="P:Gehtsoft.Tools.Structures.FibonacciHeap`2.Count" />
        <element api="P:Gehtsoft.Tools.Structures.FibonacciHeap`2.Minimum" />
        <element api="P:Gehtsoft.Tools.Structures.FibonacciHeap`2.IsReadOnly" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumerationUtils.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" source="extension">
          <apidata name="ForEach" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
              <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
                <specialization>
                  <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                  <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                </specialization>
              </type>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Action`1" ref="true">
                <specialization>
                  <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
                    <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
                      <specialization>
                        <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                        <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                      </specialization>
                    </type>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumerationUtils" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.Add(Gehtsoft.Tools.Structures.FibonacciHeap{`0,`1}.Node)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="newNode">
          <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
            <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
              </specialization>
            </type>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
                <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
                  <specialization>
                    <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                    <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                  </specialization>
                </type>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.Add(`0,`1)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
        </parameter>
        <parameter name="value">
          <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
          <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
              <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
            </specialization>
          </type>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.Clear">
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
                <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
                  <specialization>
                    <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                    <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                  </specialization>
                </type>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.Contains(Gehtsoft.Tools.Structures.FibonacciHeap{`0,`1}.Node)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="node">
          <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
            <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
              </specialization>
            </type>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
                <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
                  <specialization>
                    <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                    <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                  </specialization>
                </type>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.CopyTo(Gehtsoft.Tools.Structures.FibonacciHeap{`0,`1}.Node[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
              <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
                <specialization>
                  <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                  <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                </specialization>
              </type>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
                <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
                  <specialization>
                    <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                    <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                  </specialization>
                </type>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.FibonacciHeap`2.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
                <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
                  <specialization>
                    <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                    <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                  </specialization>
                </type>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.DecreaseKey(Gehtsoft.Tools.Structures.FibonacciHeap{`0,`1}.Node,System.Boolean,`0)">
      <apidata name="DecreaseKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="theNode">
          <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
            <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
              </specialization>
            </type>
          </type>
        </parameter>
        <parameter name="minimal">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="newKey">
          <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.ExtractMin">
      <apidata name="ExtractMin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
          <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
              <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
            </specialization>
          </type>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
              <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
                <specialization>
                  <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                  <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                </specialization>
              </type>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
                <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
                  <specialization>
                    <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                    <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                  </specialization>
                </type>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.FibonacciHeap`2.IsReadOnly">
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
                <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
                  <specialization>
                    <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                    <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                  </specialization>
                </type>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.FibonacciHeap`2.Minimum">
      <apidata name="Minimum" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Minimum" />
      <returns>
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
          <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
              <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
            </specialization>
          </type>
        </type>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.Remove(Gehtsoft.Tools.Structures.FibonacciHeap{`0,`1}.Node)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="theNode">
          <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
            <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
              </specialization>
            </type>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
                <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
                  <specialization>
                    <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                    <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                  </specialization>
                </type>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.Union(Gehtsoft.Tools.Structures.FibonacciHeap{`0,`1})">
      <apidata name="Union" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="otherHeap">
          <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
              <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node">
      <apidata name="Node" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
              <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
                <specialization>
                  <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                  <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                </specialization>
              </type>
            </type>
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node.#ctor(`0,`1)" />
        <element api="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node.CompareTo(Gehtsoft.Tools.Structures.FibonacciHeap{`0,`1}.Node)" />
        <element api="P:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node.Key" />
        <element api="P:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node.Value" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node.#ctor(`0,`1)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="key">
          <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
        </parameter>
        <parameter name="value">
          <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
          <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node.CompareTo(Gehtsoft.Tools.Structures.FibonacciHeap{`0,`1}.Node)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
            <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
              </specialization>
            </type>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
                <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true">
                  <specialization>
                    <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                    <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
                  </specialization>
                </type>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
          <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node.Key">
      <apidata name="Key" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_Key" />
      <setter name="set_Key" />
      <returns>
        <template name="TKey" index="0" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
          <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node.Value">
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <template name="TValue" index="1" api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2.Node" ref="true">
          <type api="T:Gehtsoft.Tools.Structures.FibonacciHeap`2" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1">
      <apidata name="FixedCircularBuffer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Gehtsoft.Tools.Structures.AutoExpandCircularBuffer`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="F:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.mBuffer" />
        <element api="F:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.mCapacity" />
        <element api="F:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.mHead" />
        <element api="F:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.mSize" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.#ctor(System.Int32)" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.ConvertIndex(System.Int32)" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.GetEnumerator" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Add(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Clear" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Contains(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.CopyTo(`0[],System.Int32)" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Remove(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.IndexOf(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Insert(System.Int32,`0)" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.RemoveAt(System.Int32)" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Dequeue" />
        <element api="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Enqueue(`0)" />
        <element api="P:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Count" />
        <element api="P:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.IsReadOnly" />
        <element api="P:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Item(System.Int32)" />
        <element api="P:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.First" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumerationUtils.ForEach``1(System.Collections.Generic.IList{``0},System.Action`2)" source="extension">
          <apidata name="ForEach" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Action`2" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumerationUtils" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumerationUtils.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" source="extension">
          <apidata name="ForEach" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Action`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumerationUtils" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1024</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Add(`0)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="item">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Clear">
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Contains(`0)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.ConvertIndex(System.Int32)">
      <apidata name="ConvertIndex" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.CopyTo(`0[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Dequeue">
      <apidata name="Dequeue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Enqueue(`0)">
      <apidata name="Enqueue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.First">
      <apidata name="First" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_First" />
      <returns>
        <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.IndexOf(`0)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.IndexOf(`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Insert(System.Int32,`0)">
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.IsReadOnly">
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IList`1.Item(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.mBuffer">
      <apidata name="mBuffer" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.mCapacity">
      <apidata name="mCapacity" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.mHead">
      <apidata name="mHead" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="F:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.mSize">
      <apidata name="mSize" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.Remove(`0)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.RemoveAt(System.Int32)">
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.FixedCircularBuffer`1.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures" />
        <type api="T:Gehtsoft.Tools.Structures.FixedCircularBuffer`1" ref="true" />
      </containers>
    </api>
    <api id="N:Gehtsoft.Tools.Structures.Channels">
      <apidata name="Gehtsoft.Tools.Structures.Channels" group="namespace" />
      <elements>
        <element api="T:Gehtsoft.Tools.Structures.Channels.Channel`1" />
        <element api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" />
        <element api="T:Gehtsoft.Tools.Structures.Channels.ChannelIsClosedException" />
        <element api="T:Gehtsoft.Tools.Structures.Channels.ChannelSelector" />
        <element api="T:Gehtsoft.Tools.Structures.Channels.IChannel" />
        <element api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" />
        <element api="T:Gehtsoft.Tools.Structures.Channels.IChannelContainer`1" />
        <element api="T:Gehtsoft.Tools.Structures.Channels.PrioritizedChannel`1" />
      </elements>
    </api>
    <api id="T:Gehtsoft.Tools.Structures.Channels.Channel`1">
      <apidata name="Channel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.Channel`1" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Gehtsoft.Tools.Structures.Channels.Channel`1.#ctor" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.Channel`1.#ctor(System.Int32)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Post(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Send(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Send(`0,System.Threading.CancellationToken)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.SendAsync(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.SendAsync(`0,System.Threading.CancellationToken)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Gehtsoft#Tools#Structures#Channels#IChannel#Receive" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Close" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Peek" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Receive" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Receive(System.Threading.CancellationToken)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.ReceiveAsync" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.ReceiveAsync(System.Void)" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Count" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.IsEmpty" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.SyncRoot" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.IsClosed" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.DataAvailableWaitHandle" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.Channel`1.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.Channel`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.Channel`1.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.Channel`1" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1">
      <apidata name="ChannelBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Gehtsoft.Tools.Structures.Channels.Channel`1" ref="true" />
          <type api="T:Gehtsoft.Tools.Structures.Channels.PrioritizedChannel`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" />
          </specialization>
        </type>
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.#ctor(Gehtsoft.Tools.Structures.Channels.IChannelContainer{`0})" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.#ctor(System.Int32,Gehtsoft.Tools.Structures.Channels.IChannelContainer{`0})" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Post(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Send(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Send(`0,System.Threading.CancellationToken)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.SendAsync(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.SendAsync(`0,System.Threading.CancellationToken)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Gehtsoft#Tools#Structures#Channels#IChannel#Receive" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Close" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Peek" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Receive" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Receive(System.Threading.CancellationToken)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.ReceiveAsync" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.ReceiveAsync(System.Void)" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Count" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.IsEmpty" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.SyncRoot" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.IsClosed" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.DataAvailableWaitHandle" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.#ctor(Gehtsoft.Tools.Structures.Channels.IChannelContainer{`0})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="channelContainer">
          <type api="T:Gehtsoft.Tools.Structures.Channels.IChannelContainer`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.#ctor(System.Int32,Gehtsoft.Tools.Structures.Channels.IChannelContainer{`0})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="channelContainer">
          <type api="T:Gehtsoft.Tools.Structures.Channels.IChannelContainer`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Close">
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Gehtsoft.Tools.Structures.Channels.IChannel.Close">
          <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Tools.Structures.Channels.IChannel.Count">
          <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.DataAvailableWaitHandle">
      <apidata name="DataAvailableWaitHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DataAvailableWaitHandle" />
      <returns>
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Tools.Structures.Channels.IChannel.DataAvailableWaitHandle">
          <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Gehtsoft#Tools#Structures#Channels#IChannel#Receive">
      <apidata name="Receive" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Tools.Structures.Channels.IChannel.Receive">
          <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.IsClosed">
      <apidata name="IsClosed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsClosed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Tools.Structures.Channels.IChannel.IsClosed">
          <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.IsEmpty">
      <apidata name="IsEmpty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsEmpty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Tools.Structures.Channels.IChannel.IsEmpty">
          <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Peek">
      <apidata name="Peek" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.Peek">
          <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Post(`0)">
      <apidata name="Post" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.Post(`0)">
          <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Receive">
      <apidata name="Receive" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.Receive">
          <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Receive(System.Threading.CancellationToken)">
      <apidata name="Receive" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.Receive(System.Threading.CancellationToken)">
          <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.ReceiveAsync">
      <apidata name="ReceiveAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.ReceiveAsync">
          <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.ReceiveAsync(System.Void)">
      <apidata name="ReceiveAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="cancellationToken">
          <type api="T:System.Void" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.ReceiveAsync(System.Void)">
          <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Send(`0)">
      <apidata name="Send" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.Send(`0)">
          <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Send(`0,System.Threading.CancellationToken)">
      <apidata name="Send" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.Send(`0,System.Threading.CancellationToken)">
          <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.SendAsync(`0)">
      <apidata name="SendAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.SendAsync(`0)">
          <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.SendAsync(`0,System.Threading.CancellationToken)">
      <apidata name="SendAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.SendAsync(`0,System.Threading.CancellationToken)">
          <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.SyncRoot">
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:Gehtsoft.Tools.Structures.Channels.IChannel.SyncRoot">
          <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Structures.Channels.ChannelIsClosedException">
      <apidata name="ChannelIsClosedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelIsClosedException.#ctor" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="SerializationFormatter" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.ChannelIsClosedException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelIsClosedException" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Structures.Channels.ChannelSelector">
      <apidata name="ChannelSelector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelSelector.#ctor(Gehtsoft.Tools.Structures.Channels.IChannel[])" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelSelector.Select" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelSelector.Select(System.Threading.CancellationToken)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelSelector.SelectAll" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelSelector.SelectAll(System.Threading.CancellationToken)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelSelector.SelectAsync" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelSelector.SelectAsync(System.Void)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.ChannelSelector.#ctor(Gehtsoft.Tools.Structures.Channels.IChannel[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="channels" params="true">
          <arrayOf rank="1">
            <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelSelector" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.ChannelSelector.Select">
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelSelector" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.ChannelSelector.Select(System.Threading.CancellationToken)">
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelSelector" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.ChannelSelector.SelectAll">
      <apidata name="SelectAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelSelector" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.ChannelSelector.SelectAll(System.Threading.CancellationToken)">
      <apidata name="SelectAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelSelector" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.ChannelSelector.SelectAsync">
      <apidata name="SelectAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelSelector" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.ChannelSelector.SelectAsync(System.Void)">
      <apidata name="SelectAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cancellationToken">
          <type api="T:System.Void" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelSelector" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Structures.Channels.IChannel">
      <apidata name="IChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" ref="true" />
      </implementors>
      <elements>
        <element api="M:Gehtsoft.Tools.Structures.Channels.IChannel.Close" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.IChannel.Receive" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.IChannel.IsClosed" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.IChannel.Count" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.IChannel.IsEmpty" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.IChannel.SyncRoot" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.IChannel.DataAvailableWaitHandle" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.IChannel.Close">
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.Channels.IChannel.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.Channels.IChannel.DataAvailableWaitHandle">
      <apidata name="DataAvailableWaitHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DataAvailableWaitHandle" />
      <returns>
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.Channels.IChannel.IsClosed">
      <apidata name="IsClosed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsClosed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.Channels.IChannel.IsEmpty">
      <apidata name="IsEmpty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsEmpty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.IChannel.Receive">
      <apidata name="Receive" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.Channels.IChannel.SyncRoot">
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Structures.Channels.IChannel`1">
      <apidata name="IChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel" ref="true" />
      </implements>
      <implementors>
        <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true" />
      </implementors>
      <elements>
        <element api="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.Peek" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.Receive" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.Receive(System.Threading.CancellationToken)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.IChannel.Receive" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.ReceiveAsync" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.ReceiveAsync(System.Void)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.Post(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.Send(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.Send(`0,System.Threading.CancellationToken)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.SendAsync(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.SendAsync(`0,System.Threading.CancellationToken)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.IChannel.Close" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.IChannel.IsClosed" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.IChannel.Count" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.IChannel.IsEmpty" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.IChannel.SyncRoot" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.IChannel.DataAvailableWaitHandle" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.Peek">
      <apidata name="Peek" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.Post(`0)">
      <apidata name="Post" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.Receive">
      <apidata name="Receive" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.Receive(System.Threading.CancellationToken)">
      <apidata name="Receive" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.ReceiveAsync">
      <apidata name="ReceiveAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.ReceiveAsync(System.Void)">
      <apidata name="ReceiveAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="cancellationToken">
          <type api="T:System.Void" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.Send(`0)">
      <apidata name="Send" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.Send(`0,System.Threading.CancellationToken)">
      <apidata name="Send" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.SendAsync(`0)">
      <apidata name="SendAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.IChannel`1.SendAsync(`0,System.Threading.CancellationToken)">
      <apidata name="SendAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannel`1" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Structures.Channels.IChannelContainer`1">
      <apidata name="IChannelContainer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Gehtsoft.Tools.Structures.Channels.IChannelContainer`1.Enqueue(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.IChannelContainer`1.Peek" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.IChannelContainer`1.Dequeue" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.IChannelContainer`1.Count" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.Structures.Channels.IChannelContainer`1.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannelContainer`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.IChannelContainer`1.Dequeue">
      <apidata name="Dequeue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.IChannelContainer`1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannelContainer`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.IChannelContainer`1.Enqueue(`0)">
      <apidata name="Enqueue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.IChannelContainer`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannelContainer`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.IChannelContainer`1.Peek">
      <apidata name="Peek" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.IChannelContainer`1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.IChannelContainer`1" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.Structures.Channels.PrioritizedChannel`1">
      <apidata name="PrioritizedChannel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Gehtsoft.Tools.Structures.Channels.ChannelBase`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.PrioritizedChannel`1" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.IComparable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Gehtsoft.Tools.Structures.Channels.PrioritizedChannel`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:Gehtsoft.Tools.Structures.Channels.PrioritizedChannel`1.#ctor" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.PrioritizedChannel`1.#ctor(System.Int32)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Post(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Send(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Send(`0,System.Threading.CancellationToken)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.SendAsync(`0)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.SendAsync(`0,System.Threading.CancellationToken)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Gehtsoft#Tools#Structures#Channels#IChannel#Receive" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Close" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Peek" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Receive" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Receive(System.Threading.CancellationToken)" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.ReceiveAsync" />
        <element api="M:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.ReceiveAsync(System.Void)" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.Count" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.IsEmpty" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.SyncRoot" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.IsClosed" />
        <element api="P:Gehtsoft.Tools.Structures.Channels.ChannelBase`1.DataAvailableWaitHandle" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.PrioritizedChannel`1.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.PrioritizedChannel`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.Structures.Channels.PrioritizedChannel`1.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.Structures" module="Gehtsoft.Tools.Structures" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.Structures.Channels" />
        <type api="T:Gehtsoft.Tools.Structures.Channels.PrioritizedChannel`1" ref="true" />
      </containers>
    </api>
    <api id="N:Gehtsoft.Tools.TypeUtils">
      <apidata name="Gehtsoft.Tools.TypeUtils" group="namespace" />
      <elements>
        <element api="T:Gehtsoft.Tools.TypeUtils.DateUtils" />
        <element api="T:Gehtsoft.Tools.TypeUtils.EnumerateAs`2" />
        <element api="T:Gehtsoft.Tools.TypeUtils.EnumerationUtils" />
        <element api="T:Gehtsoft.Tools.TypeUtils.EnumValue`2" />
        <element api="T:Gehtsoft.Tools.TypeUtils.EnumDescriptionAttribute" />
        <element api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" />
        <element api="T:Gehtsoft.Tools.TypeUtils.ExpressionUtils" />
        <element api="T:Gehtsoft.Tools.TypeUtils.RandomUtils" />
        <element api="T:Gehtsoft.Tools.TypeUtils.StringUtils" />
        <element api="T:Gehtsoft.Tools.TypeUtils.TaskExtension" />
      </elements>
    </api>
    <api id="T:Gehtsoft.Tools.TypeUtils.DateUtils">
      <apidata name="DateUtils" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.TypeUtils.DateUtils.ToOleDate(System.DateTime)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.DateUtils.FromOleDate(System.Double)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.DateUtils.TruncateToMilliseconds(System.DateTime)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.DateUtils.TruncateToSeconds(System.DateTime)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.DateUtils.TruncateToMinutes(System.DateTime)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.DateUtils.TruncateToHours(System.DateTime)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.DateUtils.TruncateTime(System.DateTime)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.DateUtils.BeginOfMonth(System.DateTime)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.DateUtils.BeginOfYear(System.DateTime)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.DateUtils.BeginOfMonth(System.DateTime)">
      <apidata name="BeginOfMonth" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dt">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.DateUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.DateUtils.BeginOfYear(System.DateTime)">
      <apidata name="BeginOfYear" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dt">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.DateUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.DateUtils.FromOleDate(System.Double)">
      <apidata name="FromOleDate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="oleDate">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.DateUtils" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.DateUtils.ToOleDate(System.DateTime)">
      <apidata name="ToOleDate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dt">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.DateUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.DateUtils.TruncateTime(System.DateTime)">
      <apidata name="TruncateTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dt">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.DateUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.DateUtils.TruncateToHours(System.DateTime)">
      <apidata name="TruncateToHours" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dt">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.DateUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.DateUtils.TruncateToMilliseconds(System.DateTime)">
      <apidata name="TruncateToMilliseconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dt">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.DateUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.DateUtils.TruncateToMinutes(System.DateTime)">
      <apidata name="TruncateToMinutes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dt">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.DateUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.DateUtils.TruncateToSeconds(System.DateTime)">
      <apidata name="TruncateToSeconds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dt">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.DateUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Gehtsoft.Tools.TypeUtils.EnumDescriptionAttribute">
      <apidata name="EnumDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumDescriptionAttribute.#ctor" />
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumDescriptionAttribute.#ctor(System.String)" />
        <element api="P:Gehtsoft.Tools.TypeUtils.EnumDescriptionAttribute.Description" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.EnumDescriptionAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.EnumDescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.EnumDescriptionAttribute.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.EnumDescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.TypeUtils.EnumDescriptionAttribute.Description">
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Description" />
      <setter name="set_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.EnumDescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.TypeUtils.EnumerateAs`2">
      <apidata name="EnumerateAs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TD">
          <constrained>
            <implements>
              <template name="TB" index="1" api="T:Gehtsoft.Tools.TypeUtils.EnumerateAs`2" />
            </implements>
          </constrained>
        </template>
        <template name="TB" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TB" index="1" api="T:Gehtsoft.Tools.TypeUtils.EnumerateAs`2" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumerateAs`2.#ctor(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumerateAs`2.GetEnumerator" />
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumerateAs`2.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumerationUtils.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" source="extension">
          <apidata name="ForEach" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TB" index="1" api="T:Gehtsoft.Tools.TypeUtils.EnumerateAs`2" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Action`1" ref="true">
                <specialization>
                  <template name="TB" index="1" api="T:Gehtsoft.Tools.TypeUtils.EnumerateAs`2" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Gehtsoft.Tools.TypeUtils" />
            <type api="T:Gehtsoft.Tools.TypeUtils.EnumerationUtils" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.EnumerateAs`2.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TD" index="0" api="T:Gehtsoft.Tools.TypeUtils.EnumerateAs`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.EnumerateAs`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.EnumerateAs`2.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="TB" index="1" api="T:Gehtsoft.Tools.TypeUtils.EnumerateAs`2" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TB" index="1" api="T:Gehtsoft.Tools.TypeUtils.EnumerateAs`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.EnumerateAs`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.EnumerateAs`2.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.EnumerateAs`2" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.TypeUtils.EnumerationUtils">
      <apidata name="EnumerationUtils" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumerationUtils.ForEach``1(``0[],System.Action`2)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumerationUtils.ForEach``1(System.Collections.Generic.IList{``0},System.Action`2)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumerationUtils.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.EnumerationUtils.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="enumerable">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gehtsoft.Tools.TypeUtils.EnumerationUtils.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gehtsoft.Tools.TypeUtils.EnumerationUtils.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.EnumerationUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.EnumerationUtils.ForEach``1(System.Collections.Generic.IList{``0},System.Action`2)">
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="array">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gehtsoft.Tools.TypeUtils.EnumerationUtils.ForEach``1(System.Collections.Generic.IList{``0},System.Action`2)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Action`2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.EnumerationUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.EnumerationUtils.ForEach``1(``0[],System.Action`2)">
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gehtsoft.Tools.TypeUtils.EnumerationUtils.ForEach``1(``0[],System.Action`2)" />
          </arrayOf>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Action`2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.EnumerationUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Gehtsoft.Tools.TypeUtils.EnumUtils">
      <apidata name="EnumUtils" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute``1(System.Enum)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute(System.Enum,System.Type)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.Description(System.Enum)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetEnumValues``2" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.EnumUtils.Description(System.Enum)">
      <apidata name="Description" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumVal">
          <type api="T:System.Enum" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute``1(System.Enum)">
      <apidata name="GetCustomAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="enumVal">
          <type api="T:System.Enum" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute``1(System.Enum)" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetCustomAttribute(System.Enum,System.Type)">
      <apidata name="GetCustomAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enumVal">
          <type api="T:System.Enum" ref="true" />
        </parameter>
        <parameter name="attributeType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Attribute" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetEnumValues``2">
      <apidata name="GetEnumValues" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TE" />
        <template name="TV" />
      </templates>
      <returns>
        <arrayOf rank="1">
          <type api="T:Gehtsoft.Tools.TypeUtils.EnumValue`2" ref="true">
            <specialization>
              <template name="TE" index="0" api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetEnumValues``2" />
              <template name="TV" index="1" api="M:Gehtsoft.Tools.TypeUtils.EnumUtils.GetEnumValues``2" />
            </specialization>
          </type>
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.EnumUtils" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.TypeUtils.EnumValue`2">
      <apidata name="EnumValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TE" />
        <template name="TV" />
      </templates>
      <elements>
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumValue`2.GetCustomAttribute``1" />
        <element api="M:Gehtsoft.Tools.TypeUtils.EnumValue`2.#ctor" />
        <element api="P:Gehtsoft.Tools.TypeUtils.EnumValue`2.Value" />
        <element api="P:Gehtsoft.Tools.TypeUtils.EnumValue`2.EnumerationValue" />
        <element api="P:Gehtsoft.Tools.TypeUtils.EnumValue`2.FieldInfo" />
        <element api="P:Gehtsoft.Tools.TypeUtils.EnumValue`2.Description" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.EnumValue`2.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.EnumValue`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.TypeUtils.EnumValue`2.Description">
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.EnumValue`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.TypeUtils.EnumValue`2.EnumerationValue">
      <apidata name="EnumerationValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_EnumerationValue" />
      <setter name="set_EnumerationValue" />
      <returns>
        <template name="TE" index="0" api="T:Gehtsoft.Tools.TypeUtils.EnumValue`2" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.EnumValue`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.TypeUtils.EnumValue`2.FieldInfo">
      <apidata name="FieldInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FieldInfo" />
      <setter name="set_FieldInfo" />
      <returns>
        <type api="T:System.Reflection.FieldInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.EnumValue`2" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.EnumValue`2.GetCustomAttribute``1">
      <apidata name="GetCustomAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TA">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="TA" index="0" api="M:Gehtsoft.Tools.TypeUtils.EnumValue`2.GetCustomAttribute``1" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.EnumValue`2" ref="true" />
      </containers>
    </api>
    <api id="P:Gehtsoft.Tools.TypeUtils.EnumValue`2.Value">
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <template name="TV" index="1" api="T:Gehtsoft.Tools.TypeUtils.EnumValue`2" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.EnumValue`2" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.TypeUtils.ExpressionUtils">
      <apidata name="ExpressionUtils" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.TypeUtils.ExpressionUtils.ExpressionToName(System.Linq.Expressions.Expression)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.ExpressionUtils.ExpressionToMemberInfo(System.Linq.Expressions.Expression)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.ExpressionUtils.ExpressionToMemberInfo(System.Linq.Expressions.Expression,System.Boolean)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.ExpressionUtils.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.ExpressionUtils.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.ExpressionUtils" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.ExpressionUtils.ExpressionToMemberInfo(System.Linq.Expressions.Expression)">
      <apidata name="ExpressionToMemberInfo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.MemberInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.ExpressionUtils" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.ExpressionUtils.ExpressionToMemberInfo(System.Linq.Expressions.Expression,System.Boolean)">
      <apidata name="ExpressionToMemberInfo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="limitToParameter">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.MemberInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.ExpressionUtils" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.ExpressionUtils.ExpressionToName(System.Linq.Expressions.Expression)">
      <apidata name="ExpressionToName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.ExpressionUtils" ref="true" />
      </containers>
    </api>
    <api id="T:Gehtsoft.Tools.TypeUtils.RandomUtils">
      <apidata name="RandomUtils" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.TypeUtils.RandomUtils.Next``1(System.Random,``0[])" />
        <element api="M:Gehtsoft.Tools.TypeUtils.RandomUtils.Next``1(System.Random,System.Collections.Generic.IList{``0})" />
        <element api="M:Gehtsoft.Tools.TypeUtils.RandomUtils.Next``1(System.Random,System.Collections.Generic.ICollection{``0})" />
        <element api="M:Gehtsoft.Tools.TypeUtils.RandomUtils.Next(System.Random,System.Int32,System.Int32)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.RandomUtils.Next(System.Random,System.DateTime,System.DateTime)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.RandomUtils.NextDouble(System.Random,System.Double,System.Double)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.RandomUtils.NextDouble(System.Random,System.Double)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.RandomUtils.IsChance(System.Random,System.Double)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.RandomUtils.Event(System.Random,System.Int32[])" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.RandomUtils.Event(System.Random,System.Int32[])">
      <apidata name="Event" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="r">
          <type api="T:System.Random" ref="true" />
        </parameter>
        <parameter name="probabilities" params="true">
          <arrayOf rank="1">
            <type api="T:System.Int32" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.RandomUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.RandomUtils.IsChance(System.Random,System.Double)">
      <apidata name="IsChance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="r">
          <type api="T:System.Random" ref="true" />
        </parameter>
        <parameter name="chance">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.RandomUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.RandomUtils.Next``1(System.Random,System.Collections.Generic.ICollection{``0})">
      <apidata name="Next" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="r">
          <type api="T:System.Random" ref="true" />
        </parameter>
        <parameter name="collection">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gehtsoft.Tools.TypeUtils.RandomUtils.Next``1(System.Random,System.Collections.Generic.ICollection{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gehtsoft.Tools.TypeUtils.RandomUtils.Next``1(System.Random,System.Collections.Generic.ICollection{``0})" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.RandomUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.RandomUtils.Next``1(System.Random,System.Collections.Generic.IList{``0})">
      <apidata name="Next" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="r">
          <type api="T:System.Random" ref="true" />
        </parameter>
        <parameter name="list">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Gehtsoft.Tools.TypeUtils.RandomUtils.Next``1(System.Random,System.Collections.Generic.IList{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gehtsoft.Tools.TypeUtils.RandomUtils.Next``1(System.Random,System.Collections.Generic.IList{``0})" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.RandomUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.RandomUtils.Next(System.Random,System.DateTime,System.DateTime)">
      <apidata name="Next" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="r">
          <type api="T:System.Random" ref="true" />
        </parameter>
        <parameter name="from">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="to">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.RandomUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.RandomUtils.Next(System.Random,System.Int32,System.Int32)">
      <apidata name="Next" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="r">
          <type api="T:System.Random" ref="true" />
        </parameter>
        <parameter name="min">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="max">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.RandomUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.RandomUtils.Next``1(System.Random,``0[])">
      <apidata name="Next" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="r">
          <type api="T:System.Random" ref="true" />
        </parameter>
        <parameter name="array">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Gehtsoft.Tools.TypeUtils.RandomUtils.Next``1(System.Random,``0[])" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gehtsoft.Tools.TypeUtils.RandomUtils.Next``1(System.Random,``0[])" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.RandomUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.RandomUtils.NextDouble(System.Random,System.Double)">
      <apidata name="NextDouble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="r">
          <type api="T:System.Random" ref="true" />
        </parameter>
        <parameter name="max">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.RandomUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.RandomUtils.NextDouble(System.Random,System.Double,System.Double)">
      <apidata name="NextDouble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="r">
          <type api="T:System.Random" ref="true" />
        </parameter>
        <parameter name="min">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="max">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.RandomUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Gehtsoft.Tools.TypeUtils.StringUtils">
      <apidata name="StringUtils" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.TypeUtils.StringUtils.Like(System.String,System.String,System.Boolean)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.StringUtils.ParseToWords(System.String)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.StringUtils.ParseToWords(System.String,System.Boolean)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.StringUtils.LevenshteinDistance(System.String,System.String)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.StringUtils.ToWords(System.String)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.StringUtils.ToWords(System.String,System.Boolean)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.StringUtils.DistanceTo(System.String,System.String)" />
        <element api="M:Gehtsoft.Tools.TypeUtils.StringUtils.IsLike(System.String,System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.StringUtils.DistanceTo(System.String,System.String)">
      <apidata name="DistanceTo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="target">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.StringUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.StringUtils.IsLike(System.String,System.String,System.Boolean)">
      <apidata name="IsLike" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mask">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="caseInsensitive">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.StringUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.StringUtils.LevenshteinDistance(System.String,System.String)">
      <apidata name="LevenshteinDistance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="target">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.StringUtils" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.StringUtils.Like(System.String,System.String,System.Boolean)">
      <apidata name="Like" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mask">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="caseInsensitive">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.StringUtils" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.StringUtils.ParseToWords(System.String)">
      <apidata name="ParseToWords" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.StringUtils" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.StringUtils.ParseToWords(System.String,System.Boolean)">
      <apidata name="ParseToWords" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mask">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.StringUtils" ref="true" />
      </containers>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.StringUtils.ToWords(System.String)">
      <apidata name="ToWords" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.StringUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.StringUtils.ToWords(System.String,System.Boolean)">
      <apidata name="ToWords" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mask">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.StringUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Gehtsoft.Tools.TypeUtils.TaskExtension">
      <apidata name="TaskExtension" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gehtsoft.Tools.TypeUtils.TaskExtension.WaitAndReturn``1(System.Threading.Tasks.Task`1)" />
      </elements>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gehtsoft.Tools.TypeUtils.TaskExtension.WaitAndReturn``1(System.Threading.Tasks.Task`1)">
      <apidata name="WaitAndReturn" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="task">
          <type api="T:System.Threading.Tasks.Task`1" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gehtsoft.Tools.TypeUtils.TaskExtension.WaitAndReturn``1(System.Threading.Tasks.Task`1)" />
      </returns>
      <containers>
        <library assembly="Gehtsoft.Tools.TypeUtils" module="Gehtsoft.Tools.TypeUtils" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Gehtsoft.Tools.TypeUtils" />
        <type api="T:Gehtsoft.Tools.TypeUtils.TaskExtension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
  </apis>
</reflection>
@class
    @name=Cache&lt;T&gt;
    @key=Gehtsoft.Tools.Structures.Cache_T
    @brief=A cache storage
    @type=class
    @ingroup=Gehtsoft.Tools.Structures
    @sig=T:Gehtsoft.Tools.Structures.Cache`1
    @param
        @name=T
        The type of the object stored in cache
    @end

    @member
        @name=Cache
        @sig=M:Gehtsoft.Tools.Structures.Cache`1.#ctor(System.TimeSpan)
        @key=Cache.1
        @divisor=.
        @brief=Constructor
        @scope=instance
        @visibility=public

        @type=constructor

        @declaration
            @language=cs
            @name=Cache
            @params=System.TimeSpan lifeSpan
        @end

        @param
            @name=lifeSpan
            Lifespan of the object in the cache
        @end

    @end

    @member
        @name=Cache
        @sig=M:Gehtsoft.Tools.Structures.Cache`1.#ctor(System.Func`2,System.Boolean)
        @key=Cache.0
        @divisor=.
        @brief=Constructor with factory
        @scope=instance
        @visibility=public

        @type=constructor

        @declaration
            @language=cs
            @name=Cache
            @params=Func<object[], T> factory, TimeSpan lifeSpan
        @end

        @param
            @name=factory
            Object factory
        @end

        @param
            @name=lifeSpan
            Lifespan of the object in the cache
        @end

    @end

    @member
        @name=Cache
        @sig=M:Gehtsoft.Tools.Structures.Cache`1.#ctor(IServiceProvider,System.Boolean)
        @key=Cache.2
        @divisor=.
        @brief=Constructor with service provider
        @scope=instance
        @visibility=public

        @type=constructor

        @declaration
            @language=cs
            @name=Cache
            @params=IServiceProvider factory, TimeSpan lifeSpan
        @end

        @param
            @name=factory
            Object factory
        @end

        @param
            @name=lifeSpan
            Lifespan of the object in the cache
        @end

    @end

    @member
        @name=Reset
        @sig=M:Gehtsoft.Tools.Structures.Cache`1.Reset
        @key=Reset.0
        @divisor=.
        @brief=Removes all elements in the cache.
        @scope=instance
        @visibility=public

        @type=method

        @declaration
            @language=cs
            @name=Reset
            @return=void

        @end

    @end

    @member
        @name=ResetFor
        @sig=M:Gehtsoft.Tools.Structures.Cache`1.ResetFor(System.Object[])
        @key=ResetFor.0
        @divisor=.
        @brief=Removes the element associated with the key
        @scope=instance
        @visibility=public

        @type=method

        @declaration
            @language=cs
            @name=ResetFor
            @return=void

            @params=params object[] args
        @end

        @param
            @name=args
            The key

        @end

    @end

    @member
        @name=Get
        @sig=M:Gehtsoft.Tools.Structures.Cache`1.Get(System.Object[])
        @key=Get.0
        @divisor=.
        @brief=Gets the object from the cache
        @scope=instance
        @visibility=public

        @type=method

        @declaration
            @language=cs
            @name=Get
            @return=T
            @params=params object[] args
        @end

        @param
            @name=args
            The key of the object to get.
        @end

        If there is no such object or if object is expired, and either a service provider or a factory are specified,
        a new instance of the object will be created.

        Otherwise [c]null[/c] value is returned.

    @end

    @member
        @name=Set
        @sig=M:Gehtsoft.Tools.Structures.Cache`1.Set(`0,System.Object[])
        @key=Set.0
        @divisor=.
        @brief=Sets the object to the cache
        @scope=instance
        @visibility=public

        @type=method

        @declaration
            @language=cs
            @name=Set
            @return=void

            @params=T x, params object[] args
        @end

        @param
            @name=x
            The object to be set
        @end

        @param
            @name=args
            The key
        @end

    @end

    @member
        @name=EnableAutoCleanup
        @sig=M:Gehtsoft.Tools.Structures.Cache`1.EnableAutoCleanup(System.Nullable{System.TimeSpan})
        @key=EnableAutoCleanup.0
        @divisor=.
        @brief=Enables automatic cleanup of the cache
        @scope=instance
        @visibility=public

        @type=method

        @declaration
            @language=cs
            @name=EnableAutoCleanup
            @return=void

            @params=System.TimeSpan? cleanupInterval
        @end

        @param
            @name=cleanupInterval
            The interval on how often cache needs to be cleaned up
        @end

    @end

    @member
        @name=CleanupHandler
        @sig=M:Gehtsoft.Tools.Structures.Cache`1.CleanupHandler
        @key=CleanupHandler.0
        @divisor=.
        @brief=
        @scope=instance
        @visibility=protected

        @type=method

        @declaration
            @language=cs
            @name=CleanupHandler
            @return=void

        @end

    @end

    @member
        @name=Item
        @sig=P:Gehtsoft.Tools.Structures.Cache`1.Item(System.Object[])
        @key=Item.0
        @divisor=.
        @brief=Gets or set an element of the cache
        @scope=instance
        @visibility=public

        @type=property

        @declaration
            @language=cs
            @name=this
            @return=T
            @params=params object[] args
            @suffix= get; set;
        @end

        @param
            @name=args

        @end

    @end

    @member
        @name=SyncRoot
        @sig=P:Gehtsoft.Tools.Structures.Cache`1.SyncRoot
        @key=SyncRoot.0
        @divisor=.
        @brief=The synchronization root for the object
        @scope=instance
        @visibility=public

        @type=property

        @declaration
            @language=cs
            @name=SyncRoot
            @return=object
            @suffix= get;
        @end

    @end

    The type defined in the [c]Gehtsoft.Tools.Structures.dll[/c] assembly.
    The namespace is [clink=Gehtsoft.Tools.Structures]Gehtsoft.Tools.Structures[/clink].
@end
